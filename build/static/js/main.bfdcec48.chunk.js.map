{"version":3,"sources":["logo.svg","App.js","Review.js","Checkout.js","AddJobDialog.js","SelectJobType.js","BottomAppBar.js","serviceWorker.js","index.js"],"names":["module","exports","App","makeStyles","theme","listItem","padding","spacing","total","fontWeight","title","marginTop","appBar","position","layout","width","marginLeft","marginRight","breakpoints","up","paper","marginBottom","stepper","buttons","display","justifyContent","button","Transition","React","forwardRef","props","ref","Slide","direction","useStyles","text","paddingBottom","list","question_list","subheader","backgroundColor","palette","background","flex","grow","flexGrow","heading","fontSize","typography","pxToRem","fontWeightRegular","fabButton","bottom","right","selectEmpty","scheduler","QuestionEditor","classes","Fragment","Paper","className","Typography","variant","idx","TextField","id","value","question","question_text","onChange","event","v","target","onChangeQuestionText","placeholder","helperText","fullWidth","multiline","margin","InputLabelProps","shrink","label","answer_type","onChangeQuestionAnswerType","select","MenuItem","key","hidden","answer_choice","onAdd","chip","handleAddAnswerChoice","onDelete","index","handleDeleteAnswerChoice","log_column","onChangeJobLogColumn","sheet_columns","map","option","condition","onChangeQuestionCondition","Grid","container","justify","alignItems","IconButton","color","aria-label","onClick","onAddQuestion","onDeleteQuestion","TabPanel","children","other","role","aria-labelledby","AddJobDialog","useTheme","useState","tab","setTab","set","schedule","dialog","delivery","tabIdx","job","setJob","sheets","setSheetColumns","google","window","updateReportColumns","newSheet","newHeaders","script","run","withSuccessHandler","s","getPageColumns","console","log","report_type","report_sheet","report_headers_row","length","push","apply","sk","getPagesList","onChangeJobDaysOfWeek","name","checked","prevJob","newJob","JSON","parse","stringify","days_of_week","newVal","qidx","questions","splice","val","idx2","vidx","handleClose","onClose","Dialog","fullScreen","open","e","TransitionComponent","AppBar","Toolbar","edge","autoFocus","is_new","onAddJob","onChangeJob","square","root","Tabs","newTab","indicatorColor","textColor","Tab","icon","l","is","onChangeJobReportSheet","type","inputProps","min","max","step","defaultValue","Number","onChangeJobReportHeadersRow","size","report_user_column","report_key_column","report_filter","log_sheet","timeout","InputProps","endAdornment","InputAdornment","FormControl","component","FormLabel","RadioGroup","row","run_type","FormControlLabel","control","Radio","utils","DateFnsUtils","disableToolbar","format","start_date","data","KeyboardButtonProps","run_priod","time","textField","every_month","formControl","FormGroup","Checkbox","mon","tue","wed","thu","fri","sat","sun","cron","all_respondents","Autocomplete","multiple","options","respondents","getOptionLabel","resId","find","res","newValue","selected","renderInput","params","welcome_message","Button","goodbye_message","email","onAddJobEmail","onDeleteJobEmail","chat_delivery","email_report_format","email_title","email_text","jobsTemplates","SelectJobType","onSelectJobType","job_type","disabled","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","Box","m","ExpansionPanelActions","SkypeIcon","SvgIcon","fill","d","test_workspace","test_respondents","channel","test_profile","invite_text","invite_html","user","first_name","last_name","company","team_name","team_id","workspaces","url","logo","maxWidth","height","flexWrap","minWidth","backdrop","zIndex","drawer","JobItemTitle","is_active","Chip","JobItemDesc","style","schedule_text","JobItemMenu","anchorEl","setAnchorEl","ListItemSecondaryAction","aria-haspopup","currentTarget","Menu","keepMounted","Boolean","isActive","onStopJob","jobIdx","onRunJob","onEditJob","onCopyJob","onDelJob","RespondentDialog","setOpen","newName","setNewName","DialogContent","DialogContentText","respondent","DialogActions","onRespondentChangeName","TeamNameDialog","onTeamChangeName","ProfileMenu","viewProfile","viewSpreadsheets","BottomAppBar","setDemo","error","setError","isLoaded","setIsLoaded","openSelectType","setSelectType","openJobSettings","setJobSettings","editedJob","setEditedJob","jobs","workspace","setWorkspace","setRespondents","profile","setProfile","respondentId","status","updateRespondent","prevRespondents","newRespondents","ir","j","Math","floor","random","jobId","refreshWorkspace","startRequest","prevState","newState","stopRequest","deleteJob","viewJobs","getSettings","refreshRespondents","updateRespondents","useEffect","message","getProfile","CssBaseline","src","alt","is_draft","publish","new_workspace","item","xs","List","ListItem","ListItemText","primary","secondary","Divider","Fab","updateJob","findIndex","addJob","gutterBottom","updateProfile","n","dangerouslySetInnerHTML","__html","ListItemAvatar","Avatar","ws","href","InputLabel","htmlFor","Input","Backdrop","CircularProgress","location","hostname","match","flexDirection","BasicButtonGroup","ButtonGroup","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.bfdcec48.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst products = [\r\n  { name: 'Product 1', desc: 'A nice thing', price: '$9.99' },\r\n  { name: 'Product 2', desc: 'Another thing', price: '$3.45' },\r\n  { name: 'Product 3', desc: 'Something else', price: '$6.51' },\r\n  { name: 'Product 4', desc: 'Best thing of all', price: '$14.11' },\r\n  { name: 'Shipping', desc: '', price: 'Free' },\r\n];\r\nconst addresses = ['1 Material-UI Drive', 'Reactville', 'Anytown', '99999', 'USA'];\r\nconst payments = [\r\n  { name: 'Card type', detail: 'Visa' },\r\n  { name: 'Card holder', detail: 'Mr John Smith' },\r\n  { name: 'Card number', detail: 'xxxx-xxxx-xxxx-1234' },\r\n  { name: 'Expiry date', detail: '04/2024' },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItem: {\r\n    padding: theme.spacing(1, 0),\r\n  },\r\n  total: {\r\n    fontWeight: 700,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Review() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      <List disablePadding>\r\n        {products.map((product) => (\r\n          <ListItem className={classes.listItem} key={product.name}>\r\n            <ListItemText primary={product.name} secondary={product.desc} />\r\n            <Typography variant=\"body2\">{product.price}</Typography>\r\n          </ListItem>\r\n        ))}\r\n        <ListItem className={classes.listItem}>\r\n          <ListItemText primary=\"Total\" />\r\n          <Typography variant=\"subtitle1\" className={classes.total}>\r\n            $34.06\r\n          </Typography>\r\n        </ListItem>\r\n      </List>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n            Shipping\r\n          </Typography>\r\n          <Typography gutterBottom>John Smith</Typography>\r\n          <Typography gutterBottom>{addresses.join(', ')}</Typography>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n            Payment details\r\n          </Typography>\r\n          <Grid container>\r\n            {payments.map((payment) => (\r\n              <React.Fragment key={payment.name}>\r\n                <Grid item xs={6}>\r\n                  <Typography gutterBottom>{payment.name}</Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Typography gutterBottom>{payment.detail}</Typography>\r\n                </Grid>\r\n              </React.Fragment>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddressForm from './AddressForm';\r\nimport PaymentForm from './PaymentForm';\r\nimport Review from './Review';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst steps = ['Shipping address', 'Payment details', 'Review your order'];\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return <AddressForm />;\r\n    case 1:\r\n      return <PaymentForm />;\r\n    case 2:\r\n      return <Review />;\r\n    default:\r\n      throw new Error('Unknown step');\r\n  }\r\n}\r\n\r\nexport default function Checkout() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n            Company name\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            Checkout\r\n          </Typography>\r\n          <Stepper activeStep={activeStep} className={classes.stepper}>\r\n            {steps.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          <React.Fragment>\r\n            {activeStep === steps.length ? (\r\n              <React.Fragment>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  Thank you for your order.\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  Your order number is #2001539. We have emailed your order confirmation, and will\r\n                  send you an update when your order has shipped.\r\n                </Typography>\r\n              </React.Fragment>\r\n            ) : (\r\n              <React.Fragment>\r\n                {getStepContent(activeStep)}\r\n                <div className={classes.buttons}>\r\n                  {activeStep !== 0 && (\r\n                    <Button onClick={handleBack} className={classes.button}>\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleNext}\r\n                    className={classes.button}\r\n                  >\r\n                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                  </Button>\r\n                </div>\r\n              </React.Fragment>\r\n            )}\r\n          </React.Fragment>\r\n        </Paper>\r\n        <Copyright />\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}","import React, {useEffect }  from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n//import { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport AlarmOnIcon from '@material-ui/icons/AlarmOn';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\r\nimport RestorePageIcon from '@material-ui/icons/RestorePage';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Box from '@material-ui/core/Box';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ChipInput from 'material-ui-chip-input';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nfunction getStyles(name, personName, theme) {\r\n    return {\r\n      fontWeight:\r\n        personName.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    text: {\r\n      padding: theme.spacing(2, 2, 0),\r\n    },\r\n    paper: {\r\n      paddingBottom: 50,\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n  \r\n    },\r\n    list: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    question_list: {\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(1),\r\n      },\r\n      subheader: {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    appBar: {\r\n      position: 'relative',\r\n    },\r\n    title: {\r\n      marginLeft: theme.spacing(2),\r\n      flex: 1,\r\n    },\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n      },\r\n    fabButton:  {\r\n      position: 'fixed',\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(2),\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      }, \r\n    scheduler:{\r\n        display: 'flex',\r\n    }   \r\n  }));\r\n\r\n\r\nfunction QuestionEditor(props){\r\n    const classes = useStyles();\r\n    const onChangeQuestionText = (event) => {\r\n        const v = event.target.value;\r\n        props.onChangeQuestionText(props.idx, v);\r\n    }\r\n    \r\n    const onChangeQuestionAnswerType = (event) => {\r\n        const v = event.target.value;\r\n        props.onChangeQuestionAnswerType(props.idx, v);\r\n    }\r\n    \r\n    const onDeleteQuestion = (event) => {\r\n        const v = event.target.value;\r\n        props.onDeleteQuestion(props.idx);\r\n    }\r\n    \r\n    const onAddQuestion = (event) => {\r\n        const v = event.target.value;\r\n        props.onAddQuestion(props.idx);\r\n    }\r\n    \r\n    const onChangeJobLogColumn = (event) => {\r\n        const v = event.target.value;\r\n        props.onChangeJobLogColumn(props.idx, v);\r\n    }\r\n    \r\n\r\n    const handleAddAnswerChoice = (chip) => {\r\n        props.handleAddAnswerChoice(props.idx, chip);\r\n    }  \r\n    \r\n    const handleDeleteAnswerChoice = (chip, index) => {\r\n        props.handleDeleteAnswerChoice(props.idx, chip, index);\r\n    }     \r\n\r\n    const onChangeQuestionCondition = (event) => {\r\n        const v = event.target.value;\r\n        props.onChangeQuestionCondition(props.idx, v);\r\n    }     \r\n    \r\n    \r\n    return(\r\n        <React.Fragment >\r\n            <Paper className={classes.question_list}>\r\n            <Typography variant=\"h6\">\r\n            {\"Вопрос №\"+(props.idx+1)}\r\n          </Typography>                \r\n                <TextField\r\n                    id={\"job-question-text\"+props.idx}\r\n\r\n                    value={props.question.question_text}\r\n                    onChange={onChangeQuestionText}                    \r\n                    placeholder=\"Введите текст вопроса\"\r\n                    helperText=\"\"\r\n                    fullWidth\r\n                    multiline\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                />\r\n                        <TextField\r\n                            id={\"job-question-answer_type\"+props.idx}\r\n                            label=\"Тип ответа\"\r\n                            value={props.question.answer_type?props.question.answer_type:\"\"}\r\n                            onChange={onChangeQuestionAnswerType}\r\n                            placeholder=\"Тип ответа\"\r\n                            helperText=\"\"\r\n                            fullWidth\r\n                            select\r\n                            margin=\"normal\"\r\n                            className={classes.selectEmpty}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}>\r\n                            <MenuItem value=\"\">\r\n                                <em>None</em>\r\n                            </MenuItem>                                \r\n                            <MenuItem key=\"text\" value=\"text\">\r\n                                Текст\r\n                            </MenuItem>\r\n                            <MenuItem key=\"number\" value=\"number\">\r\n                                Число\r\n                            </MenuItem>\r\n                            <MenuItem key=\"due\" value=\"due\">\r\n                                Срок\r\n                            </MenuItem>\r\n                            <MenuItem key=\"choice\" value=\"choice\">\r\n                                Выбор\r\n                            </MenuItem>\r\n                            <MenuItem key=\"nothing\" value=\"nothing\">\r\n                                Без ответа\r\n                            </MenuItem>\r\n                        </TextField> \r\n                        <div hidden={props.question.answer_type!=\"choice\"}> \r\n                        <ChipInput\r\n                            id={\"job-question-answer_choice\"+props.idx}\r\n                            label=\"Варианты ответа\"\r\n                            value={props.question.answer_choice}\r\n                            onAdd={(chip) => handleAddAnswerChoice(chip)}\r\n                            onDelete={(chip, index) => handleDeleteAnswerChoice(chip, index)}\r\n                        />       \r\n                        </div> \r\n                        <TextField\r\n                            id=\"job-log_column\"\r\n                            label=\"Записывать ответ в колонку\"\r\n                            value={props.question.log_column?props.question.log_column.value:''}\r\n                            onChange={onChangeJobLogColumn}\r\n                            placeholder=\"\"\r\n                            helperText=\"\"\r\n                            fullWidth\r\n                            select\r\n                            margin=\"normal\"\r\n                            className={classes.selectEmpty}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}>\r\n                            <MenuItem value=\"\">\r\n                                <em>None</em>\r\n                            </MenuItem>                                \r\n                            {props.sheet_columns.map((option) => (\r\n                                <MenuItem key={option.value} value={option.value}>\r\n                                  {option.label}\r\n                                </MenuItem>\r\n                              ))}\r\n                        </TextField>    \r\n                        <TextField\r\n                            id={\"job-question-condition\"+props.idx}\r\n                    label=\"Условие для вопроса\"\r\n                    value={props.question.condition}\r\n                    onChange={onChangeQuestionCondition}                    \r\n                    placeholder=\"Введите условия для вопроса\"\r\n                    helperText=\"\"\r\n                    fullWidth\r\n                    multiline\r\n                    margin=\"normal\"\r\n                />\r\n\r\n                        <Grid container justify=\"flex-end\" alignItems=\"flex-end\">\r\n                        <IconButton color=\"secondary\" aria-label=\"add\" className={classes.margin} onClick={onAddQuestion}>\r\n                            <AddIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"delete\" className={classes.margin} onClick={onDeleteQuestion}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                        </Grid>\r\n            </Paper>\r\n        </React.Fragment>        \r\n    )\r\n}\r\n\r\n  function TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n    const classes = useStyles();\r\n    return (\r\n      <div\r\n        role=\"tabpanel\"      \r\n        hidden={value !== index}\r\n        id={`scrollable-prevent-tabpanel-${index}`}\r\n        aria-labelledby={`scrollable-prevent-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Paper className={classes.paper}>\r\n            <Typography>{children}</Typography>\r\n          </Paper>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default function AddJobDialog(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [tab, setTab] = React.useState(props.tab?props.tab:0);\r\n    const [tabIdx, setTabIdx] = React.useState({set:0, schedule:1, dialog:2, delivery:3});\r\n    const [job, setJob] = React.useState(props.job?props.job:{});\r\n    const [sheets, setSheets] = React.useState([{value:\"123452\", label:\"Страница 1\"}, { \"value\": 1867386445, \"label\": \"Журнал\" }, {value:\"2343452\", label:\"Страница 3\"}, { \"value\": 1230523656, \"label\": \"Статус-отчет (копия)\" }]);\r\n    const [sheet_columns, setSheetColumns] = React.useState([{value:\"Ответственный\", label:\"Ответственный\"}, \r\n    {value:\"Поручение\", label:\"Поручение\"}, {value:\"Статус\", label:\"Статус\"}, {value:\"Срок\", label:\"Срок\"}, {value:\"Комментарий\", label:\"Комментарий\"},\r\n     {value:\"Проблемы\", label:\"Проблемы\"}]);\r\n     const google = window.google ? window.google : {};\r\n\r\n     const updateReportColumns = (newSheet, newHeaders) => {\r\n        if(newSheet){\r\n            if(google && google.script){\r\n                google.script.run.withSuccessHandler(function(s){\r\n            \r\n            setSheetColumns(s);\r\n            }).getPageColumns(newSheet, newHeaders);\r\n            }\r\n        } else {\r\n            setSheetColumns([]);\r\n        }\r\n   }\r\n   \r\n\r\n     if (job.id  !== props.job.id) {\r\n        console.log('new job ', props.job);\r\n        if (props.job && props.job.report_type!=\"send_report\"){\r\n            tabIdx.set=0; tabIdx.schedule=1; tabIdx.dialog=2; tabIdx.delivery=3;\r\n        } else {\r\n            tabIdx.set=0; tabIdx.schedule=1; tabIdx.dialog=-1; tabIdx.delivery=2;\r\n        }\r\n                \r\n        if(google && google.script){ \r\n            const report_sheet =  props.job?props.job.report_sheet:null; \r\n            const  report_headers_row = props.job?props.job.report_headers_row:1;        \r\n            google.script.run.withSuccessHandler(function(s){\r\n                sheets.length = 0;\r\n                sheets.push.apply(sheets, s);\r\n                if(report_sheet){\r\n                    google.script.run.withSuccessHandler(function(sk){            \r\n                        sheet_columns.length = 0;\r\n                        sheet_columns.push.apply(sheet_columns, sk);\r\n                        setJob(props.job);\r\n                        }).getPageColumns(report_sheet, report_headers_row);\r\n            \r\n                } else {\r\n                    sheet_columns.length = 0;\r\n                }             \r\n                }).getPagesList();  \r\n                \r\n        } else {\r\n            setJob(props.job);\r\n            setTab(0);\r\n        }\r\n    }\r\n\r\n\r\n    \r\n/*\r\n     useEffect(() => {\r\n        if(google && google.script){\r\n            google.script.run.withSuccessHandler(function(s){\r\n                setSheets(s);\r\n                }).getPagesList();\r\n                updateReportColumns();\r\n        } else {      \r\n         \r\n    }   \r\n      }, [])\r\n*/\r\n    \r\n\r\n\r\n\r\n    //if(tab !== props.tab){\r\n    //    setTab(props.tab)\r\n    //}\r\n\r\n    const onSaveJob = () => {\r\n        if(job.is_new){\r\n            props.onAddJob(  \r\n                job\r\n              );\r\n        } else {\r\n            props.onChangeJob(  \r\n                job\r\n              );            \r\n        }\r\n        //setSelectType(false);\r\n      props.onClose();\r\n      \r\n    }\r\n  \r\n\r\n    const onChangeJobName = (event) => {\r\n        const v = event.target.value;\r\n        setJob((prevJob) =>{\r\n          var newJob = JSON.parse(JSON.stringify(prevJob));\r\n          newJob.name = v;     \r\n          return newJob;\r\n        });          \r\n    }\r\n\r\n    const onChangeJobReportSheet = (event) => {\r\n        const v = event.target.value;  \r\n        var l = '';            \r\n        for(var is=0; is<sheets.length; is++){\r\n            if(sheets[is].value===v){\r\n                l = sheets[is].label; \r\n                break;\r\n            }\r\n          }   \r\n          const label = l;           \r\n        setJob((prevJob) =>{\r\n          var newJob = JSON.parse(JSON.stringify(prevJob));\r\n                newJob.report_sheet = {value:v, label:label}; \r\n          return newJob;\r\n        }); \r\n        updateReportColumns(label, job.report_headers_row);\r\n\r\n    }\r\n\r\n    const onChangeJobLogSheet = (event) => {\r\n        const v = event.target.value;                \r\n        setJob((prevJob) =>{\r\n          var newJob = JSON.parse(JSON.stringify(prevJob));\r\n          if(v===\"\"){\r\n            newJob.log_sheet = null;\r\n          } else {\r\n          for(var is=0; is<sheets.length; is++){\r\n            if(sheets[is].value===v){\r\n                newJob.log_sheet = {value:v, label:sheets[is].label}; \r\n                break;\r\n            }\r\n          }       \r\n        }       \r\n          return newJob;\r\n        });          \r\n    }    \r\n\r\n    \r\n    const onChangeJobReportUserColumn = (event) => {\r\n        const v = event.target.value;                \r\n        setJob((prevJob) =>{\r\n          var newJob = JSON.parse(JSON.stringify(prevJob));\r\n          newJob.report_user_column = {value:v, label:v};        \r\n          return newJob;\r\n        });          \r\n    }    \r\n\r\n    \r\n\r\n    const onChangeJobReportKeyColumn = (event) => {\r\n        const v = event.target.value;\r\n        setJob((prevJob) =>{\r\n          var newJob = JSON.parse(JSON.stringify(prevJob));\r\n          newJob.report_key_column = {value:v, label:v};      \r\n          return newJob;\r\n        });          \r\n    }    \r\n    \r\n    const onChangeJobReportHeadersRow = (event) => {\r\n        const v = Number(event.target.value);\r\n        setJob((prevJob) =>{\r\n          var newJob = JSON.parse(JSON.stringify(prevJob));\r\n          newJob.report_headers_row = v;     \r\n          return newJob;\r\n        }); \r\n        updateReportColumns(job.report_sheet.label, v);         \r\n    }\r\n\r\n    const onChangeJobFilter = (event) => {\r\n        const v = event.target.value;\r\n        setJob((prevJob) =>{\r\n          var newJob = JSON.parse(JSON.stringify(prevJob));\r\n          newJob.report_filter = v;     \r\n          return newJob;\r\n        });          \r\n    }\r\n\r\n    const onChangeRunType = (event) => {\r\n        const v = event.target.value;\r\n        setJob((prevJob) =>{\r\n          var newJob = JSON.parse(JSON.stringify(prevJob));\r\n          newJob.run_type = v;     \r\n          return newJob;\r\n        });          \r\n    }\r\n    \r\n    const onChangeStartDate = (data) => {\r\n        const start_date = data;\r\n        setJob((prevJob) =>{\r\n          var newJob = JSON.parse(JSON.stringify(prevJob));\r\n          newJob.start_date = start_date;     \r\n          return newJob;\r\n        });          \r\n    }\r\n    \r\n    const onChangeTime = (event) => {\r\n        const time = event.target.value;\r\n        setJob((prevJob) =>{\r\n          var newJob = JSON.parse(JSON.stringify(prevJob));\r\n          newJob.time = time;     \r\n          return newJob;\r\n        });          \r\n    }\r\n\r\n    \r\n    const onChangeRunPeriod = (event) => {\r\n        const v = event.target.value;\r\n        setJob((prevJob) =>{\r\n          var newJob = JSON.parse(JSON.stringify(prevJob));\r\n          newJob.run_priod = v;     \r\n          return newJob;\r\n        });            \r\n    }\r\n    \r\n    const onChangeJobEveryMonth = (event) => {\r\n        const v = event.target.value;\r\n        setJob((prevJob) =>{\r\n          var newJob = JSON.parse(JSON.stringify(prevJob));\r\n          newJob.every_month = Number(v);       \r\n          return newJob;\r\n        });          \r\n    }    \r\n\r\n    const onChangeJobDaysOfWeek = (event) => {\r\n        const name = event.target.name;\r\n        const checked = event.target.checked;\r\n        setJob((prevJob) =>{\r\n            var newJob = JSON.parse(JSON.stringify(prevJob));\r\n            newJob.days_of_week[name] = checked;       \r\n            return newJob;\r\n          });  \r\n    };\r\n    \r\n    const onChangeJobСron = (event) => {\r\n        const v = event.target.value;\r\n        setJob((prevJob) =>{\r\n          var newJob = JSON.parse(JSON.stringify(prevJob));\r\n          newJob.cron = v;     \r\n          return newJob;\r\n        });          \r\n    }\r\n\r\n    const onChangeJobTimeout = (event) => {\r\n        const v = event.target.value;\r\n        setJob((prevJob) =>{\r\n          var newJob = JSON.parse(JSON.stringify(prevJob));\r\n          newJob.timeout = Number(v);     \r\n          return newJob;\r\n        });          \r\n    }    \r\n\r\n    const onChangeAllRespondents = (event) => {\r\n        const v = event.target.checked;\r\n        setJob((prevJob) =>{\r\n          var newJob = JSON.parse(JSON.stringify(prevJob));\r\n          newJob.all_respondents = v;     \r\n          return newJob;\r\n        });          \r\n    }    \r\n    const onChangeJobRespondents = (event, newValue) => {\r\n        //console.log('event.target: ', event.target);\r\n        //console.log('newValue: ', newValue);\r\n        /*\r\n        const { options } = event.target;\r\n        \r\n        const value = [];\r\n        for (let i = 0, l = options.length; i < l; i += 1) {\r\n          if (options[i].selected) {\r\n            value.push(options[i].value);\r\n          }\r\n        }\r\n        */\r\n       const value = newValue.map((selected) => {\r\n            return selected.id;\r\n       });\r\n       //console.log('value: ', value);\r\n        setJob((prevJob) =>{\r\n            //console.log('prevJob: ', prevJob);\r\n            var newJob = JSON.parse(JSON.stringify(prevJob));\r\n            newJob.respondents = value;     \r\n            return newJob;\r\n             \r\n        });\r\n      };    \r\n    \r\n      const onChangeJobChatDelivery = (event, newValue) => {\r\n       const value = newValue.map((selected) => {\r\n            return selected.id;\r\n       });\r\n       //console.log('value: ', value);\r\n        setJob((prevJob) =>{\r\n            //console.log('prevJob: ', prevJob);\r\n            var newJob = JSON.parse(JSON.stringify(prevJob));\r\n            newJob.chat_delivery = value;     \r\n            return newJob;\r\n             \r\n        });\r\n      };   \r\n      \r\n\r\n    const onChangeWelcomeMessage = (event) => {\r\n        const v = event.target.value;\r\n        setJob((prevJob) =>{\r\n          var newJob = JSON.parse(JSON.stringify(prevJob));\r\n          newJob.welcome_message = v;     \r\n          return newJob;\r\n        });          \r\n    }    \r\n    \r\n    const onChangeQuestionText = (idx, newVal) => {\r\n        const qidx = idx;\r\n        const v = newVal\r\n        setJob((prevJob) =>{\r\n            var newJob = JSON.parse(JSON.stringify(prevJob));            \r\n            newJob.questions[qidx].question_text = v;     \r\n            return newJob;\r\n          }); \r\n    }\r\n    \r\n    const onChangeQuestionCondition = (idx, newVal) => {\r\n        const qidx = idx;\r\n        const v = newVal\r\n        setJob((prevJob) =>{\r\n            var newJob = JSON.parse(JSON.stringify(prevJob));            \r\n            newJob.questions[qidx].condition = v;     \r\n            return newJob;\r\n          }); \r\n    }\r\n\r\n    \r\n    const onChangeQuestionAnswerType = (idx, newVal) => {\r\n        const qidx = idx;\r\n        const v = newVal\r\n        setJob((prevJob) =>{\r\n            var newJob = JSON.parse(JSON.stringify(prevJob));            \r\n            newJob.questions[qidx].answer_type = v;     \r\n            return newJob;\r\n          }); \r\n    }    \r\n\r\n    const onDeleteQuestion = (idx) => {\r\n        const qidx = idx;\r\n        setJob((prevJob) =>{\r\n            var newJob = JSON.parse(JSON.stringify(prevJob));            \r\n            newJob.questions.splice(qidx,1);    \r\n            return newJob;\r\n          }); \r\n    }     \r\n \r\n    const onAddQuestion = (idx) => {\r\n        const qidx = idx;\r\n        setJob((prevJob) =>{\r\n            var newJob = JSON.parse(JSON.stringify(prevJob));            \r\n            newJob.questions.splice(idx+1,0,{\r\n                \"answer_choice\": [],\r\n                \"question_text\": \"\",\r\n                \"log_column\": { \"label\": \"\", \"value\": \"\" },\r\n                \"answer_type\": \"text\",\r\n                \"condition\": \"\"\r\n              });    \r\n            return newJob;\r\n          }); \r\n    }      \r\n \r\n    const handleAddAnswerChoice = (idx, newVal) => {\r\n        const v = newVal;\r\n        const qidx = idx;        \r\n        setJob((prevJob) =>{\r\n            var newJob = JSON.parse(JSON.stringify(prevJob));            \r\n            newJob.questions[qidx].answer_choice.push(v);    \r\n            return newJob;\r\n          }); \r\n    } \r\n    \r\n    const handleDeleteAnswerChoice = (idx, val, idx2) => {\r\n        const qidx = idx;\r\n        const vidx = idx2\r\n        setJob((prevJob) =>{\r\n            var newJob = JSON.parse(JSON.stringify(prevJob));            \r\n            newJob.questions[qidx].answer_choice.splice(vidx,1);    \r\n            return newJob;\r\n          }); \r\n    }   \r\n    const onAddJobEmail = (newVal) => {\r\n        const v = newVal;\r\n        setJob((prevJob) =>{\r\n            var newJob = JSON.parse(JSON.stringify(prevJob));            \r\n            newJob.email.push(v);    \r\n            return newJob;\r\n          }); \r\n    }  \r\n    \r\n    const onDeleteJobEmail = (newVal, index) => {\r\n        const vidx = index\r\n        setJob((prevJob) =>{\r\n            var newJob = JSON.parse(JSON.stringify(prevJob));            \r\n            newJob.email.splice(vidx,1);    \r\n            return newJob;\r\n          }); \r\n    }     \r\n\r\n    const onChangeJobLogColumn = (idx, newVal) => {\r\n        const v = newVal;\r\n        const qidx = idx;        \r\n        setJob((prevJob) =>{\r\n          var newJob = JSON.parse(JSON.stringify(prevJob));\r\n          newJob.questions[idx].log_column = {value:v, label:v};        \r\n          return newJob;\r\n        });          \r\n    }    \r\n\r\n  \r\n    const handleClose = () => {\r\n        //setSelectType(false);\r\n        props.onClose();\r\n      };\r\n  \r\n    const handleChangeTab = (event, newTab) => {\r\n        setTab(newTab);\r\n    };\r\n  \r\n    const onChangeGoodbyMessage = (event) => {\r\n        const v = event.target.value;\r\n        setJob((prevJob) =>{\r\n          var newJob = JSON.parse(JSON.stringify(prevJob));\r\n          newJob.goodbye_message = v;     \r\n          return newJob;\r\n        });          \r\n    }    \r\n    const onChangeJobReportFormat = (event) => {\r\n        const v = event.target.value;\r\n        setJob((prevJob) =>{\r\n            var newJob = JSON.parse(JSON.stringify(prevJob));            \r\n            newJob.email_report_format = v;     \r\n            return newJob;\r\n          }); \r\n    }    \r\n\r\n    \r\n    const onChangeJobEmailTitle = (event) => {\r\n        const v = event.target.value;\r\n        setJob((prevJob) =>{\r\n            var newJob = JSON.parse(JSON.stringify(prevJob));            \r\n            newJob.email_title = v;     \r\n            return newJob;\r\n          }); \r\n    }    \r\n    const onChangeJobEmailText = (event) => {\r\n        const v = event.target.value;\r\n        setJob((prevJob) =>{\r\n            var newJob = JSON.parse(JSON.stringify(prevJob));            \r\n            newJob.email_text = v;     \r\n            return newJob;\r\n          }); \r\n    }    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Dialog fullScreen open={props.open} onClose={e => handleClose(e)} TransitionComponent={Transition}>\r\n                <AppBar className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={e => handleClose(e)} aria-label=\"close\">\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"subtitle2\" className={classes.title}>\r\n                            Новое задание\r\n              </Typography>\r\n                        <IconButton autoFocus color=\"inherit\" onClick={e => onSaveJob(e)}>\r\n                            <SaveIcon />\r\n                        </IconButton>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Paper square className={classes.root}>\r\n                    <Tabs\r\n                        value={tab}\r\n                        onChange={handleChangeTab}\r\n                        variant=\"fullWidth\"\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        aria-label=\"icon tabs example\"\r\n                    >\r\n                        <Tab icon={<SettingsIcon />} aria-label=\"Основные\" />\r\n                        <Tab icon={<AlarmOnIcon />} aria-label=\"Расписание\" />\r\n                        {(job && job.report_type!=\"send_report\")?(<Tab icon={<QuestionAnswerIcon />} aria-label=\"Диалог\" />):\r\n                        \"\"}\r\n                        <Tab icon={<SendIcon />} aria-label=\"Отправка результатов\" />\r\n\r\n                    </Tabs>\r\n                    <TabPanel value={tab} index={tabIdx.set}>\r\n                        <Typography variant=\"caption\" display=\"block\">\r\n                                <span>\r\n                                    Тип задания: {job.report_type===\"send_report\"?\"Отправка отчета\":job.report_type===\"standup\"?\"Регулярный опрос\":\"Запрос на обновление\"}\r\n                                </span>\r\n                        </Typography>  \r\n                        <TextField\r\n                            id=\"job-name\"\r\n                            label=\"Название\"\r\n                            value={job.name}\r\n                            onChange={onChangeJobName}\r\n                            placeholder=\"Введите название задания\"\r\n                            helperText=\"Название должно быть уникальным\"\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n                        <TextField\r\n                            id=\"job-report_sheet\"\r\n                            label=\"Отчет\"\r\n                            value={job.report_sheet?job.report_sheet.value:\"\"}\r\n                            onChange={(e) => onChangeJobReportSheet(e)}\r\n                            placeholder=\"Укажите отчет\"\r\n                            helperText=\"\"\r\n                            fullWidth\r\n                            select\r\n                            margin=\"normal\"\r\n                            className={classes.selectEmpty}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}>\r\n                            <MenuItem value=\"\">\r\n                                <em>None</em>\r\n                            </MenuItem>                                \r\n                            {sheets.map((option) => (\r\n                                <MenuItem key={option.value} value={option.value} name={option.label}>\r\n                                  {option.label}\r\n                                </MenuItem>\r\n                              ))}\r\n                        </TextField>                       \r\n                        {job && job.report_type!=\"send_report\" && \r\n                        <div>\r\n                        <TextField\r\n                            id=\"job-report_headers_row\"\r\n                            label=\"Заголовки\"\r\n                            type=\"number\"\r\n                            inputProps={{ min: \"1\", max: \"30\", step: \"1\" }}\r\n                            value={job.report_headers_row}\r\n                            defaultValue={1}\r\n                            onChange={(e) => onChangeJobReportHeadersRow(e)}\r\n                            placeholder=\"\"\r\n                            helperText=\"\"                            \r\n                            margin=\"normal\"\r\n                            size=\"small\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n                                                       \r\n                        <TextField\r\n                            id=\"job-report_user_column\"\r\n                            label=\"Колонка с именем отвественных\"\r\n                            value={job.report_user_column?job.report_user_column.value:''}\r\n                            onChange={onChangeJobReportUserColumn}\r\n                            placeholder=\"\"\r\n                            helperText=\"\"\r\n                            fullWidth\r\n                            select\r\n                            margin=\"normal\"\r\n                            className={classes.selectEmpty}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}>\r\n                            <MenuItem value=\"\">\r\n                                <em>None</em>\r\n                            </MenuItem>                                \r\n                            {sheet_columns.map((option) => (\r\n                                <MenuItem key={option.value} value={option.value}>\r\n                                  {option.label}\r\n                                </MenuItem>\r\n                              ))}\r\n                        </TextField>\r\n                        {job.report_type==\"update_request\" && \r\n                        <div>\r\n                        <TextField\r\n                            id=\"job-report_key_column\"\r\n                            label=\"Ключевая колонка\"\r\n                            value={job.report_key_column?job.report_key_column.value:''}\r\n                            onChange={onChangeJobReportKeyColumn}                            \r\n                            placeholder=\"\"\r\n                            helperText=\"\"\r\n                            fullWidth\r\n                            select\r\n                            margin=\"normal\"\r\n                            className={classes.selectEmpty}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}>\r\n                            <MenuItem value=\"\">\r\n                                <em>None</em>\r\n                            </MenuItem>                                \r\n                            {sheet_columns.map((option) => (\r\n                                <MenuItem key={option.value} value={option.value}>\r\n                                  {option.label}\r\n                                </MenuItem>\r\n                              ))}\r\n                        </TextField>                    \r\n                        <TextField\r\n                            id=\"job-filter\"\r\n                            label=\"Фильтр\"\r\n                            multiline\r\n                            fullWidth\r\n                            value={job.report_filter}\r\n                            onChange={onChangeJobFilter}\r\n                            placeholder=\"Введите фильтр для элементов отчета\"\r\n                            helperText=\"\"                            \r\n                            margin=\"normal\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n                        </div>}\r\n                    <TextField\r\n                            id=\"job-log_sheet\"\r\n                            label=\"Доп. журнал регистрации:\"\r\n                            value={job.log_sheet?job.log_sheet.value:\"\"}\r\n                            onChange={onChangeJobLogSheet}\r\n                            placeholder=\"\"\r\n                            helperText=\"Используйте для хранения истории опросов. Очистите, если не надо вести журнал\"\r\n                            \r\n                            select\r\n                            margin=\"normal\"\r\n                            className={classes.selectEmpty}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}>\r\n                            <MenuItem value=\"\">\r\n                                <em>None</em>\r\n                            </MenuItem>                                \r\n                            {sheets.map((option) => (\r\n                                <MenuItem key={option.value} value={option.value} name={option.label}>\r\n                                  {option.label}\r\n                                </MenuItem>\r\n                              ))}\r\n                        </TextField>   \r\n                        </div>}                     \r\n                    </TabPanel>\r\n\r\n                    <TabPanel value={tab} index={tabIdx.schedule}>\r\n                    {job && job.report_type!=\"send_report\" && \r\n                        <div>\r\n                    <TextField\r\n                            id=\"job-timeout\"\r\n                            label=\"Завершать задание ч/з\"\r\n                            type=\"number\"\r\n                            inputProps={{ min: \"1\", max: \"360\", step: \"1\" }}\r\n                            value={job.timeout}\r\n                            defaultValue={30}\r\n                            onChange={onChangeJobTimeout}\r\n                            placeholder=\"\"\r\n                            helperText=\"\"                            \r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            InputProps={{\r\n                                endAdornment: <InputAdornment position=\"end\">мин.</InputAdornment>,\r\n                            }}                            \r\n                        />                                \r\n                        </div>}\r\n                    <FormControl component=\"fieldset\" >  \r\n                    <FormLabel component=\"legend\">Запуск задания</FormLabel>    \r\n      <RadioGroup row id=\"job-run_type\"  aria-label=\"run_type\" name=\"run_type\" defaultValue=\"manual\" value={job.run_type} onChange={onChangeRunType}>\r\n        <FormControlLabel value={\"manual\"} control={<Radio color=\"primary\" />} label=\"Вручную\" />\r\n        <FormControlLabel value={\"auto\"} control={<Radio color=\"primary\" />} label=\"Расписание\" />\r\n      </RadioGroup>\r\n    </FormControl>\r\n    <div hidden={(job.run_type===\"manual\")?true:false}>\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n    <KeyboardDatePicker\r\n          disableToolbar\r\n          variant=\"inline\"\r\n          format=\"dd.MM.yyyy\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          hidden={job.run_type===\"manual\"?true:false}\r\n          id=\"job-start_date\"\r\n          label=\"Дата старта\"\r\n          value={job.start_date}\r\n          onChange={onChangeStartDate}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />        \r\n  </MuiPickersUtilsProvider>\r\n  </div>\r\n  <div className={classes.scheduler}>\r\n  <div hidden={(job.run_type===\"manual\")?true:false}>\r\n  <FormControl component=\"fieldset\" >      \r\n      <RadioGroup row id=\"job-run_priod\" aria-label=\"run_priod\" name=\"run_priod\" defaultValue=\"weekly\" value={job.run_priod} onChange={onChangeRunPeriod}>\r\n        <FormControlLabel value={\"weekly\"} control={<Radio color=\"primary\" />} label=\"Еженедельно\" />\r\n        <FormControlLabel value={\"monthly\"} control={<Radio color=\"primary\" />} label=\"Ежемесячно\" />\r\n        <FormControlLabel value={\"as_cron\"} control={<Radio color=\"primary\" />} label=\"Дополнительно\" />\r\n      </RadioGroup>\r\n    </FormControl>  \r\n    </div>\r\n    <div>\r\n    <div hidden={(job.run_type===\"manual\" || job.run_priod===\"as_cron\")?true:false}>\r\n    <TextField\r\n        id=\"job-time\"\r\n        label=\"Время запуска\"\r\n        type=\"time\"\r\n        value={job.time}\r\n        defaultValue=\"10:00\"\r\n        className={classes.textField}\r\n        onChange={onChangeTime}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        inputProps={{\r\n          step: 300, // 5 min\r\n        }}\r\n      />\r\n    </div>\r\n    <div hidden={(job.run_type===\"manual\" || job.run_priod!=\"monthly\")?true:false}>\r\n    <TextField\r\n                            id=\"job-every_month\"\r\n                            label=\"Каждые\"\r\n                            value={job.every_month}\r\n                            onChange={onChangeJobEveryMonth}\r\n                            placeholder=\"\"\r\n                            helperText=\"\"\r\n                            fullWidth\r\n                            select\r\n                            defaultValue={1}\r\n                            margin=\"normal\"\r\n                            className={classes.selectEmpty}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}>                              \r\n                            <MenuItem key={1} value={1}>\r\n                                1 месяц\r\n                                </MenuItem>\r\n                                <MenuItem key={2} value={2}>\r\n                                2 месяца\r\n                                </MenuItem>\r\n                                <MenuItem key={3} value={3}>\r\n                                3 месяца\r\n                                </MenuItem>\r\n                                <MenuItem key={6} value={6}>\r\n                                6 месяца\r\n                                </MenuItem>\r\n                                <MenuItem key={9} value={9}>\r\n                                9 месяца\r\n                                </MenuItem>\r\n                                <MenuItem key={12} value={12}>\r\n                                Год\r\n                                </MenuItem>\r\n\r\n                        </TextField>     \r\n                    </div>\r\n                    <div hidden={(job.run_type===\"manual\" || job.run_priod===\"as_cron\")?true:false}>\r\n      <FormControl component=\"fieldset\" className={classes.formControl}>\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            control={<Checkbox checked={job.days_of_week?job.days_of_week.mon:false} onChange={onChangeJobDaysOfWeek} name=\"mon\" />}\r\n            label=\"Пон\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox checked={job.days_of_week?job.days_of_week.tue:false} onChange={onChangeJobDaysOfWeek} name=\"tue\" />}\r\n            label=\"Вт\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox checked={job.days_of_week?job.days_of_week.wed:false} onChange={onChangeJobDaysOfWeek} name=\"wed\" />}\r\n            label=\"Ср\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox checked={job.days_of_week?job.days_of_week.thu:false} onChange={onChangeJobDaysOfWeek} name=\"thu\" />}\r\n            label=\"Чет\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox checked={job.days_of_week?job.days_of_week.fri:false} onChange={onChangeJobDaysOfWeek} name=\"fri\" />}\r\n            label=\"Пят\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox checked={job.days_of_week?job.days_of_week.sat:false} onChange={onChangeJobDaysOfWeek} name=\"sat\" />}\r\n            label=\"Суб\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox checked={job.days_of_week?job.days_of_week.sun:false} onChange={onChangeJobDaysOfWeek} name=\"sun\" />}\r\n            label=\"Вос\"\r\n          />\r\n        </FormGroup>\r\n      </FormControl>\r\n    </div>      \r\n    <div hidden={(job.run_type===\"manual\" || job.run_priod!=\"as_cron\")?true:false}>\r\n    <TextField\r\n                            id=\"job-cron\"\r\n                            label=\"Выражение CRON\"\r\n                            value={job.cron}\r\n                            onChange={onChangeJobСron}\r\n                            placeholder=\"\"\r\n                            helperText=\"\"\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />  \r\n            </div>\r\n            </div>\r\n            </div>\r\n                    </TabPanel>                                         \r\n                    \r\n                    <TabPanel value={tab} index={tabIdx.dialog}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                id=\"job-all_respondents\"\r\n                                checked={job.all_respondents}\r\n                                onChange={onChangeAllRespondents}\r\n                                name=\"all_respondents\"                                \r\n                            />\r\n                        }\r\n                        label=\"Опрос всей команды\"\r\n                    />  \r\n                    <div hidden={job.all_respondents}>\r\n      <Autocomplete\r\n        multiple\r\n        id=\"job-respondents\"\r\n        options={props.respondents}\r\n        getOptionLabel={(option) => {return option?option.name:''}}\r\n        defaultValue={[]}\r\n        value={job.respondents?job.respondents.map((resId)=>{\r\n            return props.respondents.find(res => {\r\n                //console.log(' res ', res);\r\n                //console.log(' resId ', resId);\r\n                return res.id === resId\r\n              })\r\n        }):[]}\r\n        onChange={onChangeJobRespondents}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            variant=\"standard\"\r\n            label=\"Участники\"\r\n            placeholder=\"Выберите участников опроса\"\r\n          />\r\n        )}\r\n      />               \r\n      </div>                             \r\n                    <TextField\r\n                            id=\"job-welcome_message\"\r\n                            label=\"Приветственное сообщение:\"\r\n                            value={job.welcome_message}\r\n                            onChange={onChangeWelcomeMessage}\r\n                            placeholder=\"\"\r\n                            helperText=\"\"\r\n                            fullWidth\r\n                            multiline\r\n                            margin=\"normal\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />                      \r\n                    {(job.questions && job.questions.length>0)?job.questions.map((question, idx) => (\r\n                        <QuestionEditor key={'question_' + idx} question={question} idx={idx} sheet_columns={sheet_columns} onChangeJobLogColumn={onChangeJobLogColumn} handleDeleteAnswerChoice={handleDeleteAnswerChoice} handleAddAnswerChoice={handleAddAnswerChoice} onAddQuestion={onAddQuestion} onDeleteQuestion={onDeleteQuestion}  onChangeQuestionCondition={onChangeQuestionCondition}  onChangeQuestionText={onChangeQuestionText} onChangeQuestionAnswerType={onChangeQuestionAnswerType}/>\r\n                    )):                        \r\n                    (<Grid container justify=\"flex-end\" alignItems=\"flex-end\">\r\n                    <Button color=\"secondary\" aria-label=\"add\" className={classes.margin} onClick={(e) => onAddQuestion(0)}>\r\n                        Добавить вопрос\r\n                    </Button>\r\n                    </Grid>)\r\n                    }\r\n                    <TextField\r\n                            id=\"job-goodbye_message\"\r\n                            label=\"Итоговое сообщение:\"\r\n                            value={job.goodbye_message}\r\n                            onChange={onChangeGoodbyMessage}\r\n                            placeholder=\"\"\r\n                            helperText=\"\"\r\n                            fullWidth\r\n                            multiline\r\n                            margin=\"normal\"\r\n                        />                      \r\n                    </TabPanel>\r\n                    <TabPanel value={tab} index={tabIdx.delivery}>\r\n                    <Typography component=\"div\">\r\n                                <span>\r\n                                    Отправлять отчет\r\n                                </span>\r\n                    </Typography> \r\n                    <ChipInput\r\n                            id={\"job-email\"+props.idx}\r\n                            label=\"На Email:\"\r\n                            fullWidth\r\n                            value={job.email}\r\n                            onAdd={(chip) => onAddJobEmail(chip)}\r\n                            onDelete={(chip, index) => onDeleteJobEmail(chip, index)}\r\n                        />       \r\n\r\n                    <Autocomplete\r\n        multiple\r\n        id=\"job-chat_delivery\"\r\n        options={props.respondents}\r\n        getOptionLabel={(option) => {return option?option.name:''}}\r\n        defaultValue={[]}\r\n        value={job.chat_delivery?job.chat_delivery.map((resId)=>{\r\n            return props.respondents.find(res => {\r\n                //console.log(' res ', res);\r\n                //console.log(' resId ', resId);\r\n                return res.id === resId\r\n              })\r\n        }):[]}\r\n        onChange={onChangeJobChatDelivery}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            variant=\"standard\"\r\n            label=\"В чат:\"\r\n            placeholder=\"\"\r\n          />\r\n        )}\r\n      />               \r\n    <TextField\r\n                            id=\"job-email_report_format\"\r\n                            label=\"В формате:\"\r\n                            value={job.email_report_format}\r\n                            onChange={onChangeJobReportFormat}\r\n                            placeholder=\"\"\r\n                            helperText=\"\"\r\n                            fullWidth\r\n                            select\r\n                            defaultValue={\"link\"}\r\n                            margin=\"normal\"\r\n                            className={classes.selectEmpty}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}>                              \r\n                            <MenuItem key=\"excel\" value=\"excel\">\r\n                                excel\r\n                                </MenuItem>\r\n                                <MenuItem key=\"pdf\" value=\"pdf\">\r\n                                pdf\r\n                                </MenuItem>\r\n                                <MenuItem key=\"link\" value=\"link\">\r\n                                ссылка на отчет в Google\r\n                                </MenuItem>\r\n                        </TextField>     \r\n                        <TextField\r\n                            id=\"job-email_title\"\r\n                            label=\"Заголовок:\"\r\n                            value={job.email_title}\r\n                            onChange={onChangeJobEmailTitle}\r\n                            placeholder=\"\"\r\n                            helperText=\"\"\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n                        <TextField\r\n                            id=\"job-email_text\"\r\n                            label=\"Текст:\"\r\n                            multiline\r\n                            value={job.email_text}\r\n                            onChange={onChangeJobEmailText}\r\n                            placeholder=\"Введите текст сообщения при доставке отчета\"\r\n                            helperText=\"\"\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                    </TabPanel>\r\n                </Paper>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n\r\n // export default withStyles(styles, { withTheme: true })(AddJobDialog); ","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n//import { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport AlarmOnIcon from '@material-ui/icons/AlarmOn';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\r\nimport RestorePageIcon from '@material-ui/icons/RestorePage';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Box from '@material-ui/core/Box';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ChipInput from 'material-ui-chip-input';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    text: {\r\n      padding: theme.spacing(2, 2, 0),\r\n    },\r\n    paper: {\r\n      paddingBottom: 50,\r\n    },\r\n    list: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    question_list: {\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(1),\r\n      },\r\n      subheader: {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    appBar: {\r\n      position: 'relative',\r\n    },\r\n    title: {\r\n      marginLeft: theme.spacing(2),\r\n      flex: 1,\r\n    },\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n      },\r\n    fabButton:  {\r\n      position: 'fixed',\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(2),\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      }, \r\n    scheduler:{\r\n        display: 'flex',\r\n    }   \r\n  }));\r\n\r\n  const jobsTemplates =         \r\n  {'standup':\r\n  {\r\n    \"questions\": [\r\n      {\r\n        \"question_text\": \"Что ты сделал(-а) вчера?\",\r\n        \"answer_type\": \"text\",\r\n        \"condition\": \"\",\r\n        \"log_column\": { \"label\": \"Прогресс\", \"value\": \"Прогресс\" },\r\n      },\r\n      {\r\n        \"question_text\": \"Что будешь делать сегодня?\",\r\n        \"answer_type\": \"text\",\r\n        \"log_column\": { \"label\": \"План\", \"value\": \"План\" },\r\n        \"condition\": \"\"\r\n      },\r\n      {\r\n        \"question_text\": \"Есть проблемы у тебя на пути?\",\r\n        \"log_column\": { \"label\": \"Проблемы\", \"value\": \"Проблемы\" },\r\n        \"answer_type\": \"text\",\r\n        \"condition\": \"\"\r\n      },\r\n    ],\r\n    \"email_title\": \"Ежедневный стендап-отчет\",\r\n    \"email_delivery\": [],\r\n    \"report_key_column\": null,\r\n    \"run_priod\": \"weekly\",\r\n    \"email_report_format\": \"excel\",\r\n    \"email\": [],\r\n    \"respondents\": [],\r\n    \"run_type\": \"auto\",\r\n    \"report_filter\": \"\",\r\n    \"time\": \"10:00:00\",\r\n    \"start_date\": \"2020-05-28T15:59:25.000Z\",\r\n    \"all_respondents\": true,\r\n    \"chat_delivery\": [],\r\n    \"log_sheet\": {},\r\n    \"report_type\": \"standup\",\r\n    \"days_of_week\": { \"fri\": true, \"sun\": false, \"mon\": true, \"wed\": true, \"thu\": true, \"sat\": false, \"tue\": true },\r\n    \"every_month\": 1,\r\n    \"timezone\": \"Europe/Moscow\",\r\n    \"goodbye_message\": \"Спасибо! Хорошего дня!\",\r\n    \"report_sheet\": null,\r\n    \"report_headers_row\": 1,\r\n    \"name\": \"Ежедневный стендап-опрос\",\r\n    \"report_user_column\": { \"label\": \"Сотрудник\", \"value\": \"Сотрудник\" },\r\n    \"timeout\": 30,\r\n    \"welcome_message\": \"Привет!\\nПришло время ежедневного стендапа\\nОтветь на мои 3 вопроса\",\r\n    \"email_text\": \"Ваш ежедневный стендап-отчет опрос завершен.\\nОтчет прилагается к письму\",\r\n    },\r\n    \"update_request\":  {\r\n        \"questions\": [\r\n          {\r\n            \"question_text\": \"Какой статус задачи?\",\r\n            \"answer_type\": \"choice\",\r\n            \"condition\": \"\",\r\n            \"log_column\": { \"label\": \"Статус\", \"value\": \"Статус\" },\r\n            \"answer_choice\": [\"Не выполнено\", \"Выполнено\"]\r\n          },\r\n          {\r\n            \"question_text\": \"Что осталось сделать?\",\r\n            \"answer_type\": \"text\",\r\n            \"log_column\": { \"label\": \"Комментарий\", \"value\": \"Комментарий\" },\r\n            \"condition\": \"Статус=\\\"Не выполнено\\\"\"\r\n          },\r\n          {\r\n            \"question_text\": \"Есть ли проблемы?\",\r\n            \"log_column\": { \"label\": \"Проблемы\", \"value\": \"Проблемы\" },\r\n            \"answer_type\": \"text\",\r\n            \"condition\": \"Статус=\\\"Не выполнено\\\"\"\r\n          }],\r\n        \"email_title\": \"Статус-отчет по задачам\",\r\n        \"email_delivery\": [],\r\n        \"report_key_column\": { \"label\": \"Задача\", \"value\": \"Задача\" },\r\n        \"run_priod\": \"weekly\",\r\n        \"email_report_format\": \"excel\",\r\n        \"email\": [],\r\n        \"respondents\": [],\r\n        \"run_type\": \"auto\",\r\n        \"report_filter\": \"Статус = \\\"Не выполнено\\\" ИЛИ НЕ Статус\",\r\n        \"time\": \"10:00:00\",\r\n        \"start_date\": \"2020-05-28T15:59:25.000Z\",\r\n        \"all_respondents\": true,\r\n        \"chat_delivery\": [],\r\n        \"log_sheet\": null,\r\n        \"report_type\": \"update_request\",\r\n        \"days_of_week\": {\"fri\": true, \"sun\": false, \"mon\": true, \"wed\": true, \"thu\": false, \"sat\": false, \"tue\": false },\r\n        \"every_month\": 1,\r\n        \"goodbye_message\": \"Спасибо! Хорошего дня!\",\r\n        \"report_sheet\": null,\r\n        \"report_headers_row\": 4,\r\n        \"name\": \"Статус-отчет по исполнению задач\",\r\n        \"report_user_column\": { \"label\": \"Ответственный\", \"value\": \"Ответственный\" },\r\n        \"timeout\": 45,\r\n        \"welcome_message\": \"Привет! Пришло время сбора статусов по твоим задачам. Ответь на мои вопросы\",\r\n        \"email_text\": \"Ваш опрос по статусу задач завершен.\\nСтатус-отчет прилагается к письму\",\r\n        \"is_active\": false\r\n        },\r\n\"send_report\":  {\r\n    \"questions\": [],\r\n    \"email_title\": \"Отчет\",\r\n    \"email_delivery\": [],\r\n    \"report_key_column\": null,\r\n    \"run_priod\": \"weekly\",\r\n    \"email_report_format\": \"pdf\",\r\n    \"email\": [],\r\n    \"respondents\": [],\r\n    \"run_type\": \"auto\",\r\n    \"report_filter\": \"\",\r\n    \"time\": \"10:00:00\",\r\n    \"start_date\": \"2020-05-28T15:59:25.000Z\",\r\n    \"all_respondents\": true,\r\n    \"chat_delivery\": [],\r\n    \"log_sheet\": null,\r\n    \"report_type\": \"send_report\",\r\n    \"days_of_week\": { \"\": false, \"fri\": false, \"sun\": false, \"mon\": true, \"wed\": false, \"thu\": false, \"sat\": false, \"tue\": false },\r\n    \"every_month\": 1,\r\n    \"goodbye_message\": \"\",\r\n    \"report_sheet\": null,\r\n    \"report_headers_row\": 1,\r\n    \"name\": \"Регулярный отчет\",\r\n    \"report_user_column\": null,\r\n    \"timeout\": 30,\r\n    \"welcome_message\": \"\",\r\n    \"email_text\": \"Ваш регулярный отчет прилагается к письму\",\r\n    \"is_active\": false\r\n    },\r\n\r\n};\r\n\r\n\r\nexport default function SelectJobType(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const onSelectJobType = (e, job_type) => {\r\n\r\n        props.onSelectJobType(jobsTemplates[job_type]);\r\n        props.onClose();\r\n    }\r\n\r\n    const handleClose = () => {\r\n        //setSelectType(false);\r\n        props.onClose();\r\n    };   \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Dialog fullScreen open={props.open} onClose={e => handleClose(e)} TransitionComponent={Transition}>\r\n                <AppBar className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={e => handleClose(e)} aria-label=\"close\">\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"subtitle2\" className={classes.title}>\r\n                            Новое задание\r\n              </Typography>\r\n                        <IconButton autoFocus color=\"inherit\" disabled={true}>\r\n                            <SaveIcon />\r\n                        </IconButton>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Paper square className={classes.root}>\r\n                    <Typography variant=\"h6\">Выберите тип задания</Typography>\r\n\r\n\r\n                    <ExpansionPanel>\r\n                        <ExpansionPanelSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1a-content\"\r\n                            id=\"panel1a-header\"\r\n                        >\r\n                            <Typography variant=\"subtitle2\">Регулярный опрос команды</Typography>\r\n                        </ExpansionPanelSummary>\r\n                        <ExpansionPanelDetails>\r\n                            <Typography component=\"div\">\r\n                                <Box fontSize=\"fontSize\" m={1}>\r\n                                    Позволяет с указанной вами регулярностью провести опрос в чате участников команды и на основании полученных ответов заполнить указанный вами отчет, а также отправить отчет на эл. почту\r\n             <br />Подходит сбора ежедневных или еженедельных отчетов у сотрудников, таких как, Standup\r\n             </Box>\r\n                            </Typography>\r\n\r\n                        </ExpansionPanelDetails>\r\n                        <ExpansionPanelActions>\r\n                            <Button color=\"primary\" onClick={e => onSelectJobType(e, 'standup')}>\r\n                                Создать\r\n            </Button>\r\n                        </ExpansionPanelActions>\r\n                    </ExpansionPanel>\r\n                    <ExpansionPanel>\r\n                        <ExpansionPanelSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel2a-content\"\r\n                            id=\"panel2a-header\"\r\n                        >\r\n                            <Typography variant=\"subtitle2\">Сбор и обновление данных</Typography>\r\n                        </ExpansionPanelSummary>\r\n                        <ExpansionPanelDetails>\r\n                            <Typography component=\"div\">\r\n                                <Box fontSize=\"fontSize\" m={1}>\r\n                                    Позволяет с указанной вами регулярностью запросить в чате у участников команды новые данные по строкам из отчета и на основании полученных ответов обновить отчет, а также отправить отчет на эл. почту\r\n             <br />Подходит для регулярного трекинга задач, поручений или целей и подготовки статус-отчета\r\n             </Box>\r\n                            </Typography>\r\n                        </ExpansionPanelDetails>\r\n                        <ExpansionPanelActions>\r\n                            <Button color=\"primary\" onClick={e => onSelectJobType(e, 'update_request')}>\r\n                                Создать\r\n            </Button>\r\n                        </ExpansionPanelActions>\r\n                    </ExpansionPanel>\r\n                    <ExpansionPanel>\r\n                        <ExpansionPanelSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel3a-content\"\r\n                            id=\"panel3a-header\"\r\n                        >\r\n                            <Typography variant=\"subtitle2\">Отправка отчета (без опроса)</Typography>\r\n                        </ExpansionPanelSummary>\r\n                        <ExpansionPanelDetails>\r\n                            <Typography component=\"div\">\r\n                                <Box fontSize=\"fontSize\" m={1}>\r\n                                    Позволяет с указанной вами регулярностью отправлять на эл. почту или в чат необходимый вам отчет\r\n             <br />Подходит для отправки сводных отчетов или отчетов, загруженных из внешних систем\r\n             </Box>\r\n                            </Typography>\r\n                        </ExpansionPanelDetails>\r\n                        <ExpansionPanelActions>\r\n                            <Button color=\"primary\" onClick={e => onSelectJobType(e, 'send_report')}>\r\n                                Создать\r\n            </Button>\r\n                        </ExpansionPanelActions>\r\n                    </ExpansionPanel>\r\n                </Paper>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n\r\n // export default withStyles(styles, { withTheme: true })(AddJobDialog); ","import React, {useEffect }  from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AddJobDialog from \"./AddJobDialog\";\r\nimport SelectJobType from \"./SelectJobType\";\r\n//import { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport AlarmOnIcon from '@material-ui/icons/AlarmOn';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\r\nimport RestorePageIcon from '@material-ui/icons/RestorePage';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\n\r\nfunction SkypeIcon(props) {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path fill=\"currentColor\" d=\"M18,6C20.07,8.04 20.85,10.89 20.36,13.55C20.77,14.27 21,15.11 21,16A5,5 0 0,1 16,21C15.11,21 14.27,20.77 13.55,20.36C10.89,20.85 8.04,20.07 6,18C3.93,15.96 3.15,13.11 3.64,10.45C3.23,9.73 3,8.89 3,8A5,5 0 0,1 8,3C8.89,3 9.73,3.23 10.45,3.64C13.11,3.15 15.96,3.93 18,6M12.04,17.16C14.91,17.16 16.34,15.78 16.34,13.92C16.34,12.73 15.78,11.46 13.61,10.97L11.62,10.53C10.86,10.36 10,10.13 10,9.42C10,8.7 10.6,8.2 11.7,8.2C13.93,8.2 13.72,9.73 14.83,9.73C15.41,9.73 15.91,9.39 15.91,8.8C15.91,7.43 13.72,6.4 11.86,6.4C9.85,6.4 7.7,7.26 7.7,9.54C7.7,10.64 8.09,11.81 10.25,12.35L12.94,13.03C13.75,13.23 13.95,13.68 13.95,14.1C13.95,14.78 13.27,15.45 12.04,15.45C9.63,15.45 9.96,13.6 8.67,13.6C8.09,13.6 7.67,14 7.67,14.57C7.67,15.68 9,17.16 12.04,17.16Z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nconst test_workspace = {\r\n    \"is_draft\":true,\r\n    \"id\": \"1MEhgR4ufrfUAiSl-aMFfgNAOM991IOpFUaOzJY8JUIE\",\r\n    \"userid\": \"113113451137464492701\",\r\n    \"name\": \"Шаблон со скриптом\",\r\n    \"type\": \"GSheet\",\r\n    \"source\": \"https://docs.google.com/spreadsheets/d/1MEhgR4ufrfUAiSl-aMFfgNAOM991IOpFUaOzJY8JUIE\",\r\n    \"title\": \"Шаблон со скриптом\",\r\n    \"rtype\": \"standup\",\r\n    \"timezone\": \"Europe/Moscow\",\r\n    \"lastrequest\": null,\r\n    \"request_settings\": null,\r\n    \"jobs\": [{\r\n      \"id\": \"424904c89e31b96e274414c9805d194e\",\r\n      \"report_headers_row\": 1,\r\n      \"goodbye_message\": \"\",\r\n      \"bt_test_request\": false,\r\n      \"email_report_format\": \"excel\",\r\n      \"days_of_week\": { \"sun\": true, \"tue\": false, \"sat\": false, \"thu\": false, \"mon\": false, \"wed\": false, \"fri\": true },\r\n      \"every_month\": 1,\r\n      \"run_priod\": \"weekly\",\r\n      \"schedule_text\": \"В 22:15, только в воскресенье и пятница\",\r\n      \"email_title\": \"Ежедневный отчет\",\r\n      \"timezone\": \"Europe/Moscow\",\r\n      \"email\": [\"pavlicholeg@gmail.com\"],\r\n      \"chat_delivery\": [\"29:1BwOcuMmh1fUe0hna1NtTnUMzPKL5jmkgcLuVqZllLXw\"],\r\n      \"name\": \"Еженедельный отчет\",\r\n      \"report_type\": \"send_report\",\r\n      \"timeout\": 30,\r\n      \"report_sheet\": { \"label\": \"Еженедельный отчет\", \"value\": 1056136779 },\r\n      \"run_type\": \"auto\",\r\n      \"next_start_date\": \"2020-06-12T19:15:00.000Z\",\r\n      \"log_sheet\": {},\r\n      \"start_date\": \"2020-05-29T13:28:44.000Z\",\r\n      \"time\": \"22:15:00\",\r\n      \"email_text\": \"Лови еженедельный отчет по стендапу\",\r\n      \"next_start_date_text\": \"Сегодня, в 22:15\",\r\n      \"questions\": [{\r\n        \"answer_type\": \"text\",\r\n        \"question_text\": \"\",\r\n        \"condition\": \"\",\r\n        \"log_column\": {}\r\n      }],\r\n      \"report_user_column\": {},\r\n      \"save\": true,\r\n      \"welcome_message\": \"\",\r\n      \"is_active\": false\r\n    },\r\n    {\r\n      \"questions\": [\r\n        {\r\n          \"question_text\": \"Какой статус поручения?\",\r\n          \"answer_type\": \"choice\",\r\n          \"condition\": \"\",\r\n          \"log_column\": { \"label\": \"Статус\", \"value\": \"Статус\" },\r\n          \"answer_choice\": [\"Не выполнено\", \"Выполнено\"]\r\n        },\r\n        {\r\n          \"question_text\": \"Что осталось сделать?\",\r\n          \"answer_type\": \"text\",\r\n          \"log_column\": { \"label\": \"Комментарий\", \"value\": \"Комментарий\" },\r\n          \"condition\": \"Статус=\\\"Не выполнено\\\"\"\r\n        },\r\n        {\r\n          \"answer_choice\": [\"\"],\r\n          \"question_text\": \"Есть ли проблемы?\",\r\n          \"log_column\": { \"label\": \"Проблемы\", \"value\": \"Проблемы\" },\r\n          \"answer_type\": \"text\",\r\n          \"condition\": \"Статус=\\\"Не выполнено\\\"\"\r\n        },\r\n        {\r\n          \"answer_choice\": [\":-)\", \":-(\"],\r\n          \"log_column\": { \"value\": \"Комментарий\", \"label\": \"Комментарий\" },\r\n          \"answer_type\": \"choice\", \"question_text\": \"Как настроение?\", \"condition\": \"\"\r\n        }],\r\n      \"email_title\": \"Отчет по задачам\",\r\n      \"email_delivery\": [\"pavlicholeg@gmail.com\", \"pavlichviktor@ya.ru\"],\r\n      \"save\": true,\r\n      \"next_start_date_text\": \"В следующий понедельник, в 12:00\",\r\n      \"last_request\": null,\r\n      \"schedule\": {\r\n        \"start\": \"2020-05-27T21:00:00.000Z\",\r\n        \"manual\": true,\r\n        \"rule\": \"30 12 * * 1,3\",\r\n        \"tz\": \"Europe/Moscow\"\r\n      },\r\n      \"report_key_column\": { \"label\": \"Поручение\", \"value\": \"Поручение\" },\r\n      \"run_priod\": \"weekly\",\r\n      \"email_report_format\": \"pdf\",\r\n      \"email\": [\"pavlicholeg@gmail.com\"],\r\n      \"respondents\": [\"29:1BwOcuMmh1fUe0hna1NtTnUMzPKL5jmkgcLuVqZllLXw\", 363504705],\r\n      \"run_type\": \"auto\",\r\n      \"sheetid\": \"1MEhgR4ufrfUAiSl-aMFfgNAOM991IOpFUaOzJY8JUIE\",\r\n      \"id\": \"51cf2374f1191db14d348df70e627f6c\",\r\n      \"next_start_date\": \"2020-06-15T09:00:00.000Z\",\r\n      \"report_filter\": \"Статус = \\\"Не выполнено\\\" ИЛИ Статус = \\\"НЕ ОТВЕТИЛ\\\" ИЛИ НЕ Статус\",\r\n      \"time\": \"12:00:00\",\r\n      \"start_date\": \"2020-05-28T15:59:25.000Z\",\r\n      \"all_respondents\": true,\r\n      \"chat_delivery\": [\"29:1BwOcuMmh1fUe0hna1NtTnUMzPKL5jmkgcLuVqZllLXw\", 363504705],\r\n      \"autorid\": \"113113451137464492701\",\r\n      \"log_sheet\": { \"value\": 1867386445, \"label\": \"Журнал\" },\r\n      \"params\": {\r\n        \"welcome_message\": \"Привет!\",\r\n        \"autorid\": \"113113451137464492701\",\r\n        \"every_month\": 1,\r\n        \"timezone\": \"Europe/Moscow\",\r\n        \"params\": {\r\n          \"log_sheet\": {},\r\n          \"email_text\": \"Получи отчет\",\r\n          \"report_headers_row\": 4,\r\n          \"report_user_column\": { \"value\": \"Ответственный\", \"label\": \"Ответственный\" },\r\n          \"days_of_week\": { \"sun\": false, \"mon\": false, \"thu\": false, \"wed\": false, \"sat\": false, \"fri\": false, \"tue\": true },\r\n          \"run_type\": \"auto\",\r\n          \"questions\": [\r\n            {\r\n              \"question_text\": \"Как дела?\",\r\n              \"answer_type\": \"text\",\r\n              \"log_column\": { \"label\": \"Комментарий\", \"value\": \"Комментарий\" }, \"condition\": \"\"\r\n            }],\r\n          \"timezone\": \"Europe/Moscow\",\r\n          \"save\": true,\r\n          \"report_sheet\": { \"label\": \"Статус-отчет\", \"value\": 568629598 },\r\n          \"timeout\": 50,\r\n          \"email_report_format\": \"pdf\",\r\n          \"time\": \"2020-05-28T12:40:00+03:00\",\r\n          \"name\": \"Второй на луну\",\r\n          \"email_title\": \"Отчет\",\r\n          \"every_month\": 2,\r\n          \"start_date\": \"2020-05-29T00:00:00+03:00\",\r\n          \"run_priod\": \"monthly\",\r\n          \"bt_test_request\": false,\r\n          \"welcome_message\": \"Ну что пора!\",\r\n          \"email\": [\"pavlicholeg@gmail.com\"],\r\n          \"report_type\": \"standup\",\r\n          \"goodbye_message\": \"Пока\"\r\n        },\r\n        \"report_user_column\": { \"label\": \"Сотрудник\", \"value\": \"Сотрудник\" },\r\n        \"email_text\": \"\",\r\n        \"run_priod\": \"weekly\",\r\n        \"save\": true,\r\n        \"email_title\": \"\",\r\n        \"report_sheet\": { \"value\": 983089736, \"label\": \"Стендап-отчет\" },\r\n        \"email\": [\"\"],\r\n        \"report_type\": \"standup\",\r\n        \"days_of_week\": { \"thu\": false, \"wed\": true, \"fri\": false, \"tue\": false, \"mon\": true, \"sat\": false, \"sun\": false },\r\n        \"run_type\": \"auto\",\r\n        \"questions\": [\r\n          {\r\n            \"log_column\": { \"value\": \"Прогресс\", \"label\": \"Прогресс\" },\r\n            \"condition\": \"\",\r\n            \"question_text\": \"Как дела?\",\r\n            \"answer_type\": \"text\"\r\n          }],\r\n        \"log_sheet\": {},\r\n        \"timeout\": 30,\r\n        \"time\": \"2020-05-28T12:30:00+03:00\",\r\n        \"name\": \"Первый в космос\",\r\n        \"report_headers_row\": 2,\r\n        \"schedule\": {\r\n          \"start\": \"2020-05-28T21:00:00.000Z\",\r\n          \"rule\": \"40 12 * /2 2\",\r\n          \"tz\": \"Europe/Moscow\"\r\n        },\r\n        \"email_report_format\": \"\",\r\n        \"bt_test_request\": false,\r\n        \"sheetid\": \"1MEhgR4ufrfUAiSl-aMFfgNAOM991IOpFUaOzJY8JUIE\",\r\n        \"goodbye_message\": \"Пока\",\r\n        \"last_request\": null,\r\n        \"id\": \"711a649a942d27e23ffc829733aab03a\",\r\n        \"start_date\": \"2020-05-28T00:00:00+03:00\"\r\n      },\r\n      \"report_type\": \"update_request\",\r\n      \"days_of_week\": { \"\": false, \"fri\": false, \"sun\": false, \"mon\": true, \"wed\": false, \"thu\": false, \"sat\": false, \"tue\": false },\r\n      \"every_month\": 1,\r\n      \"timezone\": \"Europe/Moscow\",\r\n      \"goodbye_message\": \"Пока\",\r\n      \"schedule_text\": \"В 12:00, только в понедельник\",\r\n      \"report_sheet\": { \"value\": 1230523656, \"label\": \"Статус-отчет (копия)\" },\r\n      \"report_headers_row\": 4,\r\n      \"name\": \"Статус-отчет по исполнению поручений что было длинно добавим еще немного текст для двух\",\r\n      \"report_user_column\": { \"label\": \"Ответственный\", \"value\": \"Ответственный\" },\r\n      \"bt_test_request\": false,\r\n      \"timeout\": 4,\r\n      \"welcome_message\": \"Привет!\",\r\n      \"email_text\": \"Привет твой отчет\",\r\n      \"is_active\": false\r\n    }, {\r\n      \"report_sheet\": {\r\n        \"label\":\r\n          \"Статус-отчет (копия)\", \"value\": 1230523656\r\n      },\r\n      \"email_title\": \"Отчет по задачам\",\r\n      \"next_start_date\": \"2020-06-13T09:00:00.000Z\",\r\n      \"welcome_message\": \"Привет!\",\r\n      \"next_start_date_text\": \"Завтра, в 12:00\",\r\n      \"email\": [\"pavlicholeg@gmail.com\"],\r\n      \"goodbye_message\": \"Пока\",\r\n      \"params\": {\r\n        \"run_type\": \"auto\",\r\n        \"time\": \"2020-05-28T12:30:00+03:00\",\r\n        \"timeout\": 30,\r\n        \"bt_test_request\": false,\r\n        \"params\": {\r\n          \"save\": true,\r\n          \"days_of_week\": { \"mon\": false, \"wed\": false, \"sat\": false, \"fri\": false, \"tue\": true, \"sun\": false, \"thu\": false },\r\n          \"report_headers_row\": 4,\r\n          \"email_text\": \"Получи отчет\",\r\n          \"bt_test_request\": false,\r\n          \"email_report_format\": \"pdf\",\r\n          \"timezone\": \"Europe/Moscow\",\r\n          \"run_type\": \"auto\",\r\n          \"start_date\": \"2020-05-29T00:00:00+03:00\",\r\n          \"welcome_message\": \"Ну что пора!\", \"name\": \"Второй на луну\", \"time\": \"2020-05-28T12:40:00+03:00\",\r\n          \"run_priod\": \"monthly\", \"goodbye_message\": \"Пока\",\r\n          \"report_user_column\": { \"value\": \"Ответственный\", \"label\": \"Ответственный\" },\r\n          \"every_month\": 2, \"email\": [\"pavlicholeg@gmail.com\"], \"report_sheet\": { \"value\": 568629598, \"label\": \"Статус-отчет\" },\r\n          \"questions\": [{\r\n            \"question_text\": \"Как дела?\", \"answer_type\": \"text\",\r\n            \"log_column\": { \"value\": \"Комментарий\", \"label\": \"Комментарий\" }, \"condition\": \"\"\r\n          }], \"email_title\": \"Отчет\", \"timeout\": 50,\r\n          \"log_sheet\": {}, \"report_type\": \"standup\"\r\n        },\r\n        \"email_report_format\": \"\", \"id\": \"711a649a942d27e23ffc829733aab03a\", \"run_priod\": \"weekly\", \"report_headers_row\": 2, \"report_type\": \"standup\",\r\n        \"goodbye_message\": \"Пока\", \"email_text\": \"\",\r\n        \"start_date\": \"2020-05-28T00:00:00+03:00\", \"timezone\": \"Europe/Moscow\", \"schedule\": { \"rule\": \"40 12 * /2 2\", \"tz\": \"Europe/Moscow\", \"start\": \"2020-05-28T21:00:00.000Z\" }, \"every_month\": 1,\r\n        \"sheetid\": \"1MEhgR4ufrfUAiSl-aMFfgNAOM991IOpFUaOzJY8JUIE\", \"name\": \"Первый в космос\", \"email_title\": \"\", \"log_sheet\": {}, \"days_of_week\": { \"fri\": false, \"tue\": false, \"wed\": true, \"sat\": false, \"mon\": true, \"thu\": false, \"sun\": false },\r\n        \"autorid\": \"113113451137464492701\", \"last_request\": null, \"save\": true, \"report_user_column\": { \"label\": \"Сотрудник\", \"value\": \"Сотрудник\" },\r\n        \"welcome_message\": \"Привет!\", \"report_sheet\": { \"value\": 983089736, \"label\": \"Стендап-отчет\" }, \"questions\": [{\r\n          \"condition\": \"\", \"question_text\": \"Как дела?\", \"log_column\": { \"value\": \"Прогресс\", \"label\": \"Прогресс\" },\r\n          \"answer_type\": \"text\"\r\n        }], \"email\": [\"\"]\r\n      }, \"log_sheet\": { \"label\": \"Журнал\", \"value\": 1867386445 }, \"email_text\": \"Привет твой отчет\", \"report_user_column\": { \"label\": \"Ответственный\", \"value\": \"Ответственный\" }, \"timezone\": \"Europe/Moscow\",\r\n      \"autorid\": \"113113451137464492701\", \"report_key_column\": { \"value\": \"Поручение\", \"label\": \"Поручение\" }, \"report_type\": \"update_request\", \"report_filter\": \"Статус = \\\"Не выполнено\\\" ИЛИ НЕ Статус\",\r\n      \"report_headers_row\": 4, \"start_date\": \"2020-05-28T15:59:25.000Z\", \"email_report_format\": \"excel\", \"save\": true, \"every_month\": 1, \"days_of_week\": { \"thu\": false, \"sun\": false, \"sat\": true, \"fri\": false, \"wed\": true, \"tue\": false, \"mon\": true }, \"bt_test_request\": false, \"schedule_text\": \"В 12:00, только в понедельник, среда, и суббота\", \"name\": \"Копия статус-отчет по исполнению поручений\", \"run_priod\": \"weekly\",\r\n      \"questions\": [{ \"answer_type\": \"choice\", \"answer_choice\": [\"Не выполнено\", \"Выполнено\"], \"condition\": \"\", \"log_column\": { \"value\": \"Статус\", \"label\": \"Статус\" }, \"question_text\": \"Какой статус поручения?\" }, {\r\n        \"log_column\": { \"value\": \"Комментарий\", \"label\": \"Комментарий\" },\r\n        \"question_text\": \"Что осталось сделать?\", \"condition\": \"Статус=\\\"Не выполнено\\\"\", \"answer_type\": \"text\"\r\n      }, { \"answer_choice\": [\"\"], \"log_column\": { \"label\": \"Проблемы\", \"value\": \"Проблемы\" }, \"condition\": \"Статус=\\\"Не выполнено\\\"\", \"answer_type\": \"text\", \"question_text\": \"Есть ли проблемы?\" }, {\r\n        \"answer_type\": \"choice\", \"condition\": \"\", \"answer_choice\": [\":-)\", \":-(\"], \"question_text\": \"Как настроение?\",\r\n        \"log_column\": { \"value\": \"Комментарий\", \"label\": \"Комментарий\" }\r\n      }], \"run_type\": \"auto\", \"last_request\": null, \"schedule\": { \"rule\": \"30 12 * * 1,3\", \"tz\": \"Europe/Moscow\", \"start\": \"2020-05-27T21:00:00.000Z\", \"manual\": true }, \"sheetid\": \"1MEhgR4ufrfUAiSl-aMFfgNAOM991IOpFUaOzJY8JUIE\", \"time\": \"12:00:00\", \"timeout\": 40, \"id\": \"6f7001938fe4ac37f2e25e1570e4f0ff\", \"is_active\": false\r\n    }, {\r\n      \"questions\": [{\r\n        \"answer_type\": \"text\", \"condition\": \"\", \"question_text\": \"Что делал вчера?\",\r\n        \"log_column\": { \"label\": \"Прогресс\", \"value\": \"Прогресс\" }\r\n      }, { \"question_text\": \"Что планируешь делать сегодня?\", \"condition\": \"\", \"answer_type\": \"text\", \"log_column\": { \"label\": \"План\", \"value\": \"План\" } }, {\r\n        \"question_text\": \"Есть у тебя проблемы?\", \"answer_type\": \"choice\", \"answer_choice\": [\"Да\", \"Нет\"],\r\n        \"log_column\": { \"value\": \"Проблемы\", \"label\": \"Проблемы\" }, \"condition\": \"\"\r\n      }, { \"answer_type\": \"text\", \"condition\": \"Проблемы=\\\"Да\\\"\", \"log_column\": { \"label\": \"Проблемы\", \"value\": \"Проблемы\" }, \"question_text\": \"Что за проблемы?\" }], \"schedule\": { \"manual\": true, \"tz\": \"Europe/Moscow\" }, \"all_respondents\": true,\r\n      \"schedule_text\": \"В 10:02, только в понедельник, вторник, среда, четверг, и пятница\", \"autorid\": \"113113451137464492701\", \"next_start_date\": \"2020-06-15T07:02:00.000Z\", \"run_priod\": \"weekly\", \"report_headers_row\": 2, \"welcome_message\": \"Эй, пора пройти стендап!\", \"next_start_date_text\": \"В следующий понедельник, в 10:02\", \"run_type\": \"auto\", \"email\": [\"pavlicholeg@gmail.com\", \"pavlicholeg@outlook.com\"],\r\n      \"bt_test_request\": false, \"log_sheet\": { \"value\": 1867386445, \"label\": \"Журнал\" }, \"email_title\": \"Твой отчет 3\", \"name\": \"Ежедневный стендап-отчет\", \"respondents\": [\"29:1BwOcuMmh1fUe0hna1NtTnUMzPKL5jmkgcLuVqZllLXw\", \"363504705\"], \"report_sheet\": { \"value\": 983089736, \"label\": \"Стендап-отчет\" }, \"chat_delivery\": [\"29:1BwOcuMmh1fUe0hna1NtTnUMzPKL5jmkgcLuVqZllLXw\"], \"last_request\": null, \"email_report_format\": \"excel\", \"sheetid\": \"1MEhgR4ufrfUAiSl-aMFfgNAOM991IOpFUaOzJY8JUIE\",\r\n      \"every_month\": 2, \"save\": true, \"timeout\": 4, \"timezone\": \"Europe/Moscow\", \"id\": \"711a649a942d27e23ffc829733aab03a\", \"start_date\": \"2020-05-29T00:00:00+03:00\", \"report_user_column\": { \"label\": \"Сотрудник\", \"value\": \"Сотрудник\" }, \"time\": \"10:02:00\", \"email_text\": \"За текущий день\", \"goodbye_message\": \"Покеда!\", \"days_of_week\": { \"wed\": true, \"sun\": false, \"tue\": true, \"sat\": false, \"thu\": true, \"fri\": true, \"mon\": true }, \"report_type\": \"standup\", \"params\": {\r\n        \"name\": \"Второй на луну\", \"last_request\": null, \"id\": \"711a649a942d27e23ffc829733aab03a\", \"autorid\": \"113113451137464492701\",\r\n        \"schedule\": { \"start\": \"2020-05-28T21:00:00.000Z\", \"rule\": \"40 12 * /2 2\", \"tz\": \"Europe/Moscow\" }, \"sheetid\": \"1MEhgR4ufrfUAiSl-aMFfgNAOM991IOpFUaOzJY8JUIE\", \"params\": {\r\n          \"questions\": [{ \"question_text\": \"Как дела?\", \"condition\": \"\", \"log_column\": { \"label\": \"Комментарий\", \"value\": \"Комментарий\" }, \"answer_type\": \"text\" }], \"email_title\": \"Отчет\", \"email_report_format\": \"pdf\", \"goodbye_message\": \"Пока\", \"email\": [\"pavlicholeg@gmail.com\"], \"log_sheet\": {}, \"report_sheet\": { \"label\": \"Статус-отчет\", \"value\": 568629598 }, \"report_headers_row\": 4,\r\n          \"report_type\": \"standup\", \"bt_test_request\": false, \"timeout\": 50, \"email_text\": \"Получи отчет\", \"name\": \"Второй на луну\", \"every_month\": 2, \"start_date\": \"2020-05-29T00:00:00+03:00\", \"timezone\": \"Europe/Moscow\", \"welcome_message\": \"Ну что пора!\", \"save\": true, \"report_user_column\": { \"value\": \"Ответственный\", \"label\": \"Ответственный\" }, \"time\": \"2020-05-28T12:40:00+03:00\", \"days_of_week\": { \"sun\": false, \"thu\": false, \"sat\": false, \"tue\": true, \"fri\": false, \"mon\": false, \"wed\": false }, \"run_priod\": \"monthly\", \"run_type\": \"auto\"\r\n        }\r\n      }, \"is_active\": false\r\n    }, {\r\n      \"start_date\": \"2020-05-29T14:56:43.000Z\", \"email\": [], \"id\": \"f69f9e97ff24d1ecc81011575e47b0ef\",\r\n      \"email_title\": \"Просрочка\", \"schedule\": { \"manual\": true, \"tz\": \"Europe/Moscow\" }, \"welcome_message\": \"Привет! У тебя есть просроченные задачи, укажи их статус\", \"bt_test_request\": false, \"goodbye_message\": \"Пока\", \"run_type\": \"\", \"report_sheet\": { \"value\": 1230523656, \"label\": \"Статус-отчет (копия)\" }, \"email_text\": \"Просрочка\", \"timezone\": \"Europe/Moscow\", \"timeout\": 30, \"save\": true, \"log_sheet\": { \"value\": 1867386445, \"label\": \"Журнал\" }, \"report_filter\": \"Статус = \\\"Не выполнено\\\" И Срок>ТекущаяДата\", \"name\": \"Опрос по просроченным поручениям\", \"days_of_week\": { \"wed\": true, \"thu\": true, \"fri\": true, \"mon\": false, \"sat\": false, \"tue\": true, \"sun\": false }, \"last_request\": null, \"every_month\": 1, \"autorid\": \"113113451137464492701\", \"report_user_column\": { \"label\": \"Ответственный\", \"value\": \"Ответственный\" },\r\n      \"report_key_column\": { \"label\": \"Поручение\", \"value\": \"Поручение\" }, \"params\": {\r\n        \"name\": \"Второй на луну\", \"params\": {\r\n          \"every_month\": 2, \"report_sheet\": { \"value\": 568629598, \"label\": \"Статус-отчет\" }, \"timeout\": 50, \"time\": \"2020-05-28T12:40:00+03:00\", \"email_report_format\": \"pdf\", \"run_type\": \"auto\", \"email_text\": \"Получи отчет\", \"save\": true, \"report_user_column\": { \"value\": \"Ответственный\", \"label\": \"Ответственный\" }, \"welcome_message\": \"Ну что пора!\", \"email\": [\"pavlicholeg@gmail.com\"], \"days_of_week\": { \"tue\": true, \"mon\": false, \"sat\": false, \"fri\": false, \"wed\": false, \"sun\": false, \"thu\": false }, \"bt_test_request\": false, \"log_sheet\": {}, \"report_type\": \"standup\", \"email_title\": \"Отчет\", \"questions\": [{ \"log_column\": { \"value\": \"Комментарий\", \"label\": \"Комментарий\" }, \"answer_type\": \"text\", \"question_text\": \"Как дела?\", \"condition\": \"\" }],\r\n          \"report_headers_row\": 4, \"start_date\": \"2020-05-29T00:00:00+03:00\", \"run_priod\": \"monthly\", \"timezone\": \"Europe/Moscow\", \"goodbye_message\": \"Пока\", \"name\": \"Второй на луну\"\r\n        }, \"last_request\": null, \"id\": \"711a649a942d27e23ffc829733aab03a\", \"autorid\": \"113113451137464492701\", \"schedule\": { \"rule\": \"40 12 * /2 2\", \"start\": \"2020-05-28T21:00:00.000Z\", \"tz\": \"Europe/Moscow\" }, \"sheetid\": \"1MEhgR4ufrfUAiSl-aMFfgNAOM991IOpFUaOzJY8JUIE\"\r\n      }, \"questions\": [{ \"log_column\": {}, \"question_text\": \"Что с поручением [Поручение]\", \"condition\": \"\", \"answer_type\": \"text\" }], \"next_start_date\": null, \"email_report_format\": \"excel\", \"sheetid\": \"1MEhgR4ufrfUAiSl-aMFfgNAOM991IOpFUaOzJY8JUIE\", \"schedule_text\": \"Не запланировано\", \"report_headers_row\": 4, \"report_type\": \"update_request\", \"next_start_date_text\": \"не запланирован\", \"is_active\": false\r\n    }]\r\n  };\r\n\r\nconst test_respondents = [\r\n    {\r\n      id: \"29:1BwOcuMmh1fUe0hna1NtTnUMzPKL5jmkgcLuVqZllLXw\",\r\n      name: \"Павлич Олег Геннадьевич\",\r\n      channel: \"skype\"\r\n    },\r\n    {\r\n      id: 363504705,\r\n      name: \"Иванов Игорь\",\r\n      channel: \"telegram\"\r\n    },\r\n    {\r\n      id: \"ame3838483943\",\r\n      name: \"Курпатов Алексей Алексеевич\",\r\n      channel: \"wa\"\r\n    }\r\n  ];\r\n  const test_profile = {\r\n    invite_text: 'Это текстовое приглашение\\n вместе с переводом строки',\r\n    invite_html: 'Это приглашение в html<br /> Будет ли работать перевод строки',\r\n    user:{\r\n      first_name:'Олег',\r\n      last_name: 'Павлич',\r\n      email: 'pavlicholeg@gmail.com',\r\n      company: 'Рога и Копыта',\r\n      position: 'ИТ менеджер',\r\n      team_name: 'Мечта',\r\n      team_id: '123 456 789 0'\r\n    },\r\n    workspaces: [\r\n    {\r\n      url: \"https://docs.google.com/spreadsheets/d/1-6LiCsOmHTeTQLVCc1LJcGoDvRHo4nb3cpWyFSMAYh0\",\r\n      name: \"Test 4 Copy of Шаблон со скриптом\"\r\n    },\r\n    {\r\n      url: \"https://docs.google.com/spreadsheets/d/18aE0kY3gXeIJnQVYRuj99Tw9ImvFobnGf92GPSDnB8k\",\r\n      name: \"Copy 8 of Шаблон со скриптом\"\r\n    }\r\n  ]};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  text: {\r\n    padding: theme.spacing(2, 2, 0),\r\n  },\r\n  paper: {\r\n    paddingBottom: 50,\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  list: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  subheader: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  logo: {\r\n    maxWidth: 160,\r\n    width: 30,\r\n    height: 30\r\n  },  \r\n  fabButton:  {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(2),\r\n    minWidth: 270,\r\n  },  \r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },  \r\n}));\r\n\r\n\r\nfunction JobItemTitle(job){\r\n  return (<span>{job.name}{job.is_active?<Chip color=\"secondary\" variant=\"outlined\" size=\"small\" label=\"Выполняется\" />:\"\"}</span>);  \r\n}\r\n\r\nfunction JobItemDesc(job) {\r\n  var report_desc = ' tu'//'<a data-toggle=\"tooltip\" data-placement=\"top\" title=\"Нажмите, чтобы добавить email\" href=\"#\" onclick=\"editJob('\r\n  //+ir+', 2)\">'+email.length+' email</a></li>';\r\n  \r\n  if(job.report_type=='send_report'){\r\n    return (\r\n      <div style={{\r\n        marginLeft: \"10px\"\r\n    }}>\r\n      <div style={{\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    }}>        \r\n        <AlarmOnIcon fontSize=\"small\"/>\r\n        <span>{job.schedule_text}</span>    \r\n      </div>\r\n      <div style={{\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    }}>\r\n        <SendIcon fontSize=\"small\"/>\r\n        <span>Отправить {job.report_sheet.label} на {job.email?job.email.length:0} email и {job.chat_delivery?job.chat_delivery.length:0} чел. в чат</span>\r\n      </div>\r\n    </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div style={{\r\n        marginLeft: \"10px\"\r\n    }}>\r\n      <div style={{\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    }}>        \r\n        <AlarmOnIcon fontSize=\"small\"/>\r\n        <span>{job.schedule_text}</span>    \r\n      </div>\r\n      <div style={{\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    }}>\r\n        <QuestionAnswerIcon fontSize=\"small\"/>\r\n        <span>Задать в чате  {job.questions.length} вопроса участникам</span>\r\n      </div>      \r\n      <div style={{\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    }}>\r\n        <RestorePageIcon fontSize=\"small\"/>\r\n        <span> Ч/з {job.timeout} мин. обновить отчет {job.report_sheet.label}</span>\r\n      </div>          \r\n      <div style={{\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    }}>\r\n        <SendIcon fontSize=\"small\"/>\r\n        <span>Отправить отчет на {job.email?job.email.length:0} email и {job.chat_delivery?job.chat_delivery.length:0} чел. в чат</span>\r\n      </div>\r\n    </div>      \r\n    );\r\n }  \r\n\r\n}\r\n\r\n\r\n\r\nfunction JobItemMenu(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleDel = () => {\r\n    props.onDelJob(props.jobIdx);\r\n    handleClose();\r\n  };  \r\n\r\n  const handleEdit = () => {\r\n    props.onEditJob(props.jobIdx);\r\n    handleClose();\r\n  };  \r\n\r\n\r\n  const handleCopy = () => {\r\n    props.onCopyJob(props.jobIdx);\r\n    handleClose();\r\n  }\r\n\r\n  const handleRun = () => {\r\n    props.onRunJob(props.jobIdx);\r\n    handleClose();\r\n  }\r\n\r\n  const handleStop = () => {\r\n    props.onStopJob(props.jobIdx);\r\n    handleClose();\r\n  }\r\n\r\n  return (\r\n    <ListItemSecondaryAction >\r\n      <IconButton edge=\"end\" aria-label=\"menu\" aria-controls=\"job-item-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n        <MoreIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"job-item-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {props.isActive?<MenuItem onClick={handleStop}>Завершить</MenuItem>:<MenuItem onClick={handleRun}>Выполнить сейчас</MenuItem>}\r\n        <MenuItem onClick={handleEdit}>Редактировать</MenuItem>\r\n        <MenuItem onClick={handleCopy}>Дублировать</MenuItem>\r\n        <MenuItem onClick={handleDel}>Удалить</MenuItem>\r\n      </Menu>\r\n    </ListItemSecondaryAction>\r\n  );\r\n}\r\n\r\nfunction RespondentDialog(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [newName, setNewName] = React.useState('');\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if(newName && newName.length>0 && newName!=props.respondent.name){\r\n      props.onRespondentChangeName(props.respondent.id, newName);\r\n    }    \r\n    handleClose();\r\n  };\r\n\r\n  const  onChangeName = (event) =>{\r\n    setNewName(event.target.value)\r\n  }\r\n  \r\n  return (\r\n    <ListItemSecondaryAction >\r\n      <IconButton edge=\"end\" aria-label=\"menu\" aria-controls=\"job-item-menu\" aria-haspopup=\"true\" onClick={handleClickOpen}>\r\n        <EditIcon />\r\n      </IconButton>      \r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Измените имя участника:\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"\"\r\n            defaultValue={props.respondent.name}            \r\n            fullWidth\r\n            onChange={onChangeName}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Отмена\r\n          </Button>        \r\n          <Button onClick={handleSave} color=\"primary\">\r\n            Сохранить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </ListItemSecondaryAction>\r\n  );\r\n}\r\n\r\nfunction TeamNameDialog(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [newName, setNewName] = React.useState(props.name);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if(newName && newName.length>0 && newName!=props.name){\r\n      props.onTeamChangeName(newName);\r\n    }    \r\n    handleClose();\r\n  };\r\n\r\n  const  onChangeName = (event) =>{\r\n    setNewName(event.target.value)\r\n  }\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <IconButton edge=\"end\" aria-label=\"menu\" aria-controls=\"job-item-menu\" aria-haspopup=\"true\" onClick={handleClickOpen}>\r\n        <EditIcon fontSize=\"small\"/>\r\n      </IconButton>      \r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Измените имя команды:\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"\"\r\n            defaultValue={props.name}            \r\n            fullWidth\r\n            onChange={onChangeName}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Отмена\r\n          </Button>        \r\n          <Button onClick={handleSave} color=\"primary\">\r\n            Сохранить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </React.Fragment>\r\n  );\r\n}\r\n\r\n\r\nfunction ProfileMenu(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const viewSpreadsheets = () => {\r\n    props.viewSpreadsheets();\r\n    handleClose();\r\n  }; \r\n  \r\n  const viewProfile = () => {\r\n    props.viewProfile();\r\n    handleClose();\r\n  };   \r\n\r\n  return (\r\n    <React.Fragment>\r\n      <IconButton edge=\"end\" aria-label=\"menu\" color=\"inherit\" aria-controls=\"profile-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n        <AccountCircleIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"profile-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={viewProfile}>Профиль</MenuItem>\r\n        <MenuItem onClick={viewSpreadsheets}>Перейти</MenuItem>\r\n      </Menu>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n\r\nexport default function BottomAppBar() {\r\n  const classes = useStyles();\r\n  /*\r\n  constructor(props){\r\n    super(props);\r\n    this.onAddJob = this.onAddJob.bind(this);\r\n    this.onDelJob = this.onDelJob.bind(this);\r\n    this.viewJobs = this.viewJobs.bind(this);\r\n    this.viewTeams = this.viewTeams.bind(this);   \r\n    this.viewSpreadsheets = this.viewSpreadsheets.bind(this); \r\n    this.onRespondentChangeName = this.onRespondentChangeName.bind(this);        \r\n    messages.view = {tab:'jobs'};//сюда пишем связанное с визуальным выводом\r\n    this.state = messages;\r\n  }  \r\n  */\r\n  const [demo, setDemo] = React.useState(false);\r\n  const [error, setError] = React.useState(null);\r\n  const [isLoaded, setIsLoaded] = React.useState(false);\r\n  const [tab, setTab] = React.useState('jobs');\r\n  //const [openJobDialog, setOpenJobDialog] = React.useState(false);\r\n  const [openSelectType, setSelectType] = React.useState(false);\r\n  const [openJobSettings, setJobSettings] = React.useState(false);\r\n  const [editedJob, setEditedJob] = React.useState({});\r\nconst [workspace, setWorkspace] = React.useState({jobs:[]});\r\n  const [respondents, setRespondents] = React.useState([]);\r\n  const [profile, setProfile] = React.useState({workspaces:[]});\r\n\r\n  const handleClickAddJob = (e) => {\r\n    setSelectType(true);\r\n  }\r\n\r\n  const handleSelectJobType = (newJob) => {\r\n    //console.log('newJob ', newJob);\r\n    newJob.id = ''+Math.floor(Math.random() * Math.floor(1000000000));\r\n    newJob.is_new = true;\r\n    setEditedJob(newJob);\r\n    setJobSettings(true);\r\n  }\r\n\r\n  \r\n  const handleClickCloseJobDialog = () => {\r\n    //setEditedJob({});\r\n    setJobSettings(false);\r\n  }\r\n\r\n  const handleClickCloseSelectType = () => {\r\n    setSelectType(false);\r\n  }\r\n\r\n\r\n  //const [open, setOpen] = React.useState(false);\r\n  const onRespondentChangeName = (respondentId, newName) => {\r\n    if(google && google.script) {\r\n      google.script.run.withSuccessHandler(function(res){\r\n      if(res.status && res.status=='ok'){\r\n        setRespondents(res.respondents);\r\n      } else {\r\n        //TODO вывести ошибку!\r\n      }\r\n\r\n    }).updateRespondent({id:respondentId, name:newName})\r\n    } else {\r\n\r\n    setRespondents((prevRespondents) =>{\r\n      var newRespondents = JSON.parse(JSON.stringify(prevRespondents));\r\n      for(var ir=0; ir<newRespondents.length; ir++){\r\n        if(newRespondents[ir].id==respondentId){\r\n          newRespondents[ir].name = newName;\r\n          break;\r\n        }\r\n      }\r\n      return newRespondents;\r\n    });    \r\n  }\r\n  }\r\n\r\n  const onAddJob = (job) => {\r\n    (google && google.script)?google.script.run.withSuccessHandler(function(res){\r\n      if(res.status && res.status=='ok'){\r\n        refreshWorkspace();\r\n      } else {\r\n        //TODO вывести ошибку!\r\n      }\r\n\r\n    }).addJob(job):\r\n    setWorkspace((prevState) =>{\r\n      var newState = JSON.parse(JSON.stringify(prevState));\r\n      newState.jobs.push(job);\r\n      return newState;\r\n    })\r\n  }\r\n\r\n  const onChangeJob = (job) => {\r\n    //console.log(\"job \", job);\r\n    if(google && google.script) {\r\n      google.script.run.withSuccessHandler(function(res){\r\n      if(res.status && res.status=='ok'){\r\n        refreshWorkspace();\r\n      } else {\r\n        //TODO вывести ошибку!\r\n      }\r\n\r\n    }).updateJob(job)\r\n    } else {\r\n    const idx = workspace.jobs.findIndex((j) => j.id === job.id);\r\n    if(idx>=0){\r\n      const newJob = job;\r\n      setWorkspace((prevState) =>{\r\n        var newState = JSON.parse(JSON.stringify(prevState));        \r\n        newState.jobs[idx] = newJob;\r\n        return newState;\r\n      });  \r\n    }\r\n  }\r\n  }\r\n  \r\n\r\n  const  onEditJob = (jobIdx) => {\r\n    var j = JSON.parse(JSON.stringify(workspace.jobs[jobIdx]));\r\n    j.is_new = false;    \r\n    setEditedJob(j);\r\n    setJobSettings(true);  \r\n  }  \r\n\r\n  const  onCopyJob = (jobIdx) => {\r\n    var j = JSON.parse(JSON.stringify(workspace.jobs[jobIdx]));\r\n    j.id = ''+Math.floor(Math.random() * Math.floor(1000000000));\r\n    j.name = 'Копия '+j.name;\r\n    j.is_new = true;\r\n    setEditedJob(j);\r\n    setJobSettings(true);  \r\n  }  \r\n\r\n    \r\n  const onRunJob = (jobIdx) => {\r\n    var jobId = workspace.jobs[jobIdx].id;\r\n    if(google && google.script) {\r\n      google.script.run.withSuccessHandler(function(res){\r\n      if(res.status && res.status=='ok'){\r\n        refreshWorkspace();\r\n      } else {\r\n        //TODO вывести ошибку!\r\n      }\r\n\r\n    }).startRequest(jobId);  \r\n    } else {\r\n    setWorkspace((prevState) =>{\r\n      var newState = JSON.parse(JSON.stringify(prevState));\r\n      newState.jobs[jobIdx].is_active = true;\r\n      return newState;\r\n    });   \r\n    } \r\n  }   \r\n\r\n  const onStopJob = (jobIdx) => {\r\n    var jobId = workspace.jobs[jobIdx].id;\r\n    if(google && google.script) {\r\n      google.script.run.withSuccessHandler(function(res){\r\n      if(res.status && res.status=='ok'){\r\n        refreshWorkspace();\r\n      } else {\r\n        //TODO вывести ошибку!\r\n      }\r\n\r\n    }).stopRequest(jobId);  \r\n    } else {\r\n    setWorkspace((prevState) =>{\r\n      var newState = JSON.parse(JSON.stringify(prevState));\r\n      newState.jobs[jobIdx].is_active = false;\r\n      return newState;\r\n    });   \r\n    } \r\n  }   \r\n\r\n  \r\n\r\n  const onDelJob = (jobIdx) => {\r\n    var jobId = workspace.jobs[jobIdx].id;\r\n    if(google && google.script) {\r\n      google.script.run.withSuccessHandler(function(res){\r\n      if(res.status && res.status=='ok'){\r\n        refreshWorkspace();\r\n      } else {\r\n        //TODO вывести ошибку!\r\n      }\r\n\r\n    }).deleteJob(jobId);\r\n    } else {\r\n    setWorkspace((prevState) =>{\r\n      var newState = JSON.parse(JSON.stringify(prevState));\r\n      newState.jobs.splice(jobIdx,1);\r\n      return newState;\r\n    });   \r\n    } \r\n  }  \r\n  \r\n  \r\n  const onChangeProfileFirstName = (event) => {\r\n    const first_name = event.target.value;\r\n    setProfile((prevState) =>{\r\n      var newState = JSON.parse(JSON.stringify(prevState));\r\n      newState.user.first_name = first_name;    \r\n      return newState;\r\n    });        \r\n  }  \r\n  \r\n  const onChangeProfileLastName = (event) => {\r\n    const last_name = event.target.value;\r\n    setProfile((prevState) =>{\r\n      var newState = JSON.parse(JSON.stringify(prevState));\r\n      newState.user.last_name = last_name;   \r\n      return newState;\r\n    }); \r\n  }   \r\n\r\n  \r\n  const onChangeProfileCompany = (event) => {\r\n    const company = event.target.value;\r\n    setProfile((prevState) =>{\r\n      var newState = JSON.parse(JSON.stringify(prevState));\r\n      newState.user.company = company;     \r\n      return newState;\r\n    });      \r\n  }  \r\n  \r\n  const onTeamChangeName = (newName) => {\r\n    if(google && google.script) {\r\n      google.script.run.withSuccessHandler(function(res){\r\n      if(res.status && res.status=='ok'){\r\n        //refreshWorkspace();\r\n      } else {\r\n        //TODO вывести ошибку!\r\n      }\r\n\r\n    }).updateProfile(profile.user)\r\n    } \r\n    const n = newName;\r\n    setProfile((prevState) =>{\r\n      var newState = JSON.parse(JSON.stringify(prevState));\r\n      newState.user.team_name = n;     \r\n      return newState;\r\n    });  \r\n    \r\n  }\r\n\r\n  const onSaveProfile = () => {\r\n    if(google && google.script) {\r\n      google.script.run.withSuccessHandler(function(res){\r\n      if(res.status && res.status=='ok'){\r\n        //refreshWorkspace();\r\n      } else {\r\n        //TODO вывести ошибку!\r\n      }\r\n\r\n    }).updateProfile(profile.user)\r\n    }     \r\n    setTab('jobs');\r\n  }\r\n\r\n  const viewJobs = () => {\r\n    setTab('jobs');     \r\n  }\r\n\r\n  const viewTeams = () => {\r\n    setTab('teams');   \r\n  }  \r\n\r\n  const viewSpreadsheets = () => {\r\n    setTab('spreadsheets');       \r\n  }  \r\n\r\n  const viewProfile = () => {\r\n    setTab('profile');       \r\n  }    \r\n\r\n  const google = window.google ? window.google : {};\r\n\r\n  const refreshWorkspace = () =>{  \r\n    if(google && google.script){          \r\n    google.script.run.withSuccessHandler(function(data){\r\n      setWorkspace(data);\r\n      //setIsLoaded(true);\r\n    }).getSettings(); \r\n   }\r\n  }\r\n\r\n  const refreshRespondents = () =>{ \r\n    if(google && google.script){         \r\n    google.script.run.withSuccessHandler(function(res){\r\n      if(res.status && res.status=='ok'){\r\n        setRespondents(res.respondents);\r\n        setIsLoaded(true);\r\n      } else {\r\n        //TODO вывести ошибку!\r\n      }\r\n\r\n    }).updateRespondents(respondents); \r\n    }\r\n  }\r\n\r\n\r\n  const publish = () => {\r\n    console.log('publish ok!');\r\n    if (google && google.script) {\r\n      google.script.run.withSuccessHandler(function (res) {\r\n        if (res.status && res.status == 'ok') {\r\n          //is_draft = false;\r\n          //team_form.setAlert(\"success\", 'Успешно опубликовано!');\r\n        } else {\r\n          //team_form.setAlert(\"warning\", 'Ошибка публикации: ' + res.message ? res.message : JSON.stringify(res));\r\n        }\r\n        //team_form.emit('submitDone', submission);\r\n        refreshWorkspace();\r\n      }).publish(workspace.jobs);\r\n    } else {\r\n      var new_workspace = JSON.parse(JSON.stringify(test_workspace));\r\n      new_workspace.is_draft = false;\r\n      setWorkspace(new_workspace);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if(google && google.script){\r\n      google.script.run.withSuccessHandler(function(res){\r\n        if(res.status=='ok' && res.profile){\r\n          setProfile(res.profile);          \r\n          refreshWorkspace();\r\n          refreshRespondents();\r\n        } else {\r\n          setIsLoaded(true);\r\n          setError('Ошибка загрузки данных ' + res.message);          \r\n        }\r\n      }).getProfile(); \r\n    } else {      \r\n      setDemo(true);\r\n      setWorkspace(test_workspace);\r\n      setRespondents(test_respondents);\r\n      setProfile(test_profile);\r\n      setIsLoaded(true);\r\n      //setError('Не смог подключиться к Google Script ');          \r\n}   \r\n  }, [])\r\n\r\n  if (error) {\r\n    return <div>Ошибка: {error}</div>;\r\n  } else if (!isLoaded) {\r\n    return  (<Backdrop className={classes.backdrop} open={!isLoaded}>\r\n            <CircularProgress color=\"inherit\" />\r\n            </Backdrop>)\r\n  } else {\r\n    return(\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppBar position=\"sticky\" color=\"primary\">\r\n        <Toolbar>\r\n          <img src=\"https://i2.wp.com/nopcproblem.ru/wp-content/uploads/2019/05/discord-logo.png?ssl=1\" alt=\"logo\" className={classes.logo} />\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Dinabot\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <IconButton color=\"inherit\" aria-label=\"open drawer\" onClick={viewJobs}>\r\n            <MenuIcon />\r\n          </IconButton>          \r\n          <IconButton color=\"inherit\"  onClick={viewTeams}>\r\n            <GroupIcon />\r\n          </IconButton>\r\n          <ProfileMenu viewSpreadsheets={viewSpreadsheets} viewProfile={viewProfile}/>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Paper square className={classes.paper} hidden={tab!='jobs'}>\r\n      {workspace.is_draft?   \r\n        <div>      \r\n        <div>\r\n        <Typography variant=\"h6\">Таблица не подключена к сервису Dinabot</Typography>\r\n          </div>\r\n          <Grid container alignItems=\"flex-start\" justify=\"center\" direction=\"row\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={(e) => publish()}>Подключить</Button>\r\n          </Grid>\r\n          <Typography variant=\"subtitle2\">В таблице содержатся задания, после подключения вы сможете их редактировать или добавить свои</Typography>\r\n        </div>:\r\n        <Grid container>\r\n      <Grid item xs={10}>\r\n      <Typography variant=\"h5\" className={classes.text}>Задания боту:</Typography>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n      <IconButton edge=\"end\" onClick={e => refreshWorkspace()}>\r\n                      <CachedIcon fontSize=\"small\"/>\r\n                    </IconButton>\r\n      </Grid>\r\n      </Grid>                           \r\n        }        \r\n\r\n        <List className={classes.list}>\r\n          {//if(messages.jobs && messages.jobs.length>0){\r\n            workspace.jobs.map((job,jobIdx) => (\r\n            <React.Fragment key={job.id}>\r\n              <ListItem button>\r\n\r\n                <ListItemText primary={JobItemTitle(job)} secondary = {JobItemDesc(job)} />                \r\n                {!workspace.is_draft && <JobItemMenu isActive={job.is_active} onStopJob={onStopJob} onRunJob={onRunJob} onDelJob={onDelJob} onCopyJob={onCopyJob} onEditJob={onEditJob} jobIdx={jobIdx}>\r\n                </JobItemMenu>}\r\n              </ListItem>\r\n              <Divider />\r\n            </React.Fragment>\r\n          ))\r\n          \r\n          \r\n          }\r\n\r\n        </List>\r\n        {!workspace.is_draft && <Fab color=\"secondary\" aria-label=\"add\" className={classes.fabButton} onClick={e => handleClickAddJob(e)}>\r\n                <AddIcon />\r\n        </Fab>}\r\n        <AddJobDialog open={openJobSettings} job={editedJob} onClose={handleClickCloseJobDialog} onChangeJob={onChangeJob} onAddJob={onAddJob} respondents={respondents}/>\r\n        <SelectJobType open={openSelectType} onClose={handleClickCloseSelectType} onSelectJobType={handleSelectJobType} />\r\n        \r\n      </Paper>\r\n      <Paper square className={classes.paper} hidden={tab!='teams'}>\r\n      <Typography className={classes.text} variant=\"h5\" gutterBottom>\r\n          Ваша команда:\r\n        </Typography>\r\n      <Box>\r\n        <Typography variant=\"subtitle2\" className={classes.title}>{profile.user.team_name}<TeamNameDialog name={profile.user.team_name} onTeamChangeName={onTeamChangeName}/></Typography>\r\n        <Typography variant=\"p\" className={classes.title}>Идентификатор: {profile.user.team_id}</Typography>\r\n      </Box>\r\n      <ExpansionPanel>\r\n                        <ExpansionPanelSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel-invite\"\r\n                            id=\"panel-invite-header\"\r\n                        >\r\n                            <Typography variant=\"subtitle2\">Приглашение</Typography>\r\n                        </ExpansionPanelSummary>\r\n                        <ExpansionPanelDetails>\r\n                            <Typography component=\"div\" fontSize=\"small\" dangerouslySetInnerHTML={{__html:\"<small>\"+profile['invite_html']+\"</small>\"}}>\r\n                            </Typography>\r\n                        </ExpansionPanelDetails>\r\n                        <ExpansionPanelActions>\r\n                        <CopyToClipboard text={profile['invite_text']}>          \r\n                                <Button>Копировать в буфер</Button>\r\n                            </CopyToClipboard>\r\n                        </ExpansionPanelActions>\r\n                    </ExpansionPanel>        \r\n                    <Grid container>\r\n      <Grid item xs={10}>\r\n      <Typography variant=\"subtitle2\" className={classes.text}>Подключились</Typography>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n      <IconButton  onClick={e => refreshRespondents()}>\r\n                      <CachedIcon fontSize=\"small\"/>\r\n                    </IconButton>\r\n      </Grid>\r\n      </Grid>                    \r\n        <List className={classes.list}>\r\n          {//if(messages.jobs && messages.jobs.length>0){\r\n            respondents.map((respondent) => (\r\n            <React.Fragment key={respondent.id}>\r\n              <ListItem button>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    {(respondent.channel=='telegram')?<TelegramIcon />:(respondent.channel=='wa')?<WhatsAppIcon />: <SkypeIcon />}                    \r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary={respondent.name} secondary = {'Id:'+respondent.id} />                \r\n                <RespondentDialog respondent={respondent} onRespondentChangeName={onRespondentChangeName}/>\r\n              </ListItem>\r\n            </React.Fragment>\r\n          ))\r\n          \r\n          \r\n          }\r\n\r\n        </List>\r\n      </Paper>\r\n      <Paper square className={classes.paper} hidden={tab!='spreadsheets'}>\r\n         <Typography className={classes.text} variant=\"h5\" gutterBottom>\r\n        Таблицы подключенные к боту:\r\n      </Typography>        \r\n        <List className={classes.list}>\r\n          {//if(messages.jobs && messages.jobs.length>0){\r\n            profile.workspaces.map((ws) => (\r\n            <React.Fragment>\r\n              <ListItem button>\r\n                <a href={ws.url}>{ws.name}</a>                \r\n              </ListItem>\r\n            </React.Fragment>\r\n          ))\r\n          }\r\n\r\n        </List>\r\n      </Paper> \r\n      <Dialog fullScreen open={tab=='profile'} onClose={viewJobs} TransitionComponent={Transition}>\r\n          <AppBar className={classes.appBar}>\r\n            <Toolbar>\r\n              <IconButton edge=\"start\" color=\"inherit\" onClick={viewJobs} aria-label=\"close\">\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n              Профиль\r\n              </Typography>\r\n              <IconButton autoFocus color=\"inherit\" onClick={onSaveProfile}>\r\n                <SaveIcon />\r\n              </IconButton>          \r\n            </Toolbar>\r\n          </AppBar>\r\n                <Paper square className={classes.root}>\r\n        <p className={classes.text}>Логин: {profile.user.email}</p>        \r\n        <form className={classes.container}>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel htmlFor=\"profile-first_name\">Имя</InputLabel>\r\n            <Input id=\"profile-first_name\" name=\"profile_first_name\" value={profile.user.first_name} onChange={onChangeProfileFirstName} />\r\n          </FormControl>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel htmlFor=\"profile-last_name\">Фамилия</InputLabel>\r\n            <Input id=\"profile-last_name\" name=\"profile_last_name\" value={profile.user.last_name} onChange={onChangeProfileLastName} />\r\n          </FormControl>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel htmlFor=\"profile-company\">Компания</InputLabel>\r\n            <Input id=\"profile-company\" name=\"profile_company\" value={profile.user.company} onChange={onChangeProfileCompany} />\r\n          </FormControl>                 \r\n          </form>\r\n                 \r\n                </Paper>\r\n        </Dialog>                   \r\n\r\n    </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n//export default withStyles(styles, { withTheme: true })(BottomAppBar);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Checkout from './Checkout';\nimport BottomAppBar from './BottomAppBar';\nimport * as serviceWorker from './serviceWorker';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function BasicButtonGroup() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n        <Button>One</Button>\n        <Button>Two</Button>\n        <Button>Three</Button>\n      </ButtonGroup>\n      <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\n        <Button>One</Button>\n        <Button>Two</Button>\n        <Button>Three</Button>\n      </ButtonGroup>\n      <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\n        <Button>One</Button>\n        <Button>Two</Button>\n        <Button>Three</Button>\n      </ButtonGroup>\n    </div>\n  );\n}\n\nReactDOM.render(\n  <BottomAppBar />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}