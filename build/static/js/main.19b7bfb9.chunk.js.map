{"version":3,"sources":["logo.svg","App.js","AddressForm.js","PaymentForm.js","Review.js","Checkout.js","serviceWorker.js","index.js"],"names":["module","exports","App","AddressForm","Fragment","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","sm","TextField","required","id","name","label","fullWidth","autoComplete","FormControlLabel","control","Checkbox","color","value","PaymentForm","md","helperText","products","desc","price","addresses","payments","detail","useStyles","makeStyles","theme","listItem","padding","total","fontWeight","title","marginTop","Review","classes","List","disablePadding","map","product","ListItem","className","key","ListItemText","primary","secondary","join","direction","payment","Copyright","align","Link","href","Date","getFullYear","appBar","position","layout","width","marginLeft","marginRight","breakpoints","up","paper","marginBottom","stepper","buttons","display","justifyContent","button","steps","Checkout","React","useState","activeStep","setActiveStep","CssBaseline","AppBar","Toolbar","noWrap","Paper","component","Stepper","Step","StepLabel","length","step","Error","getStepContent","Button","onClick","Boolean","window","location","hostname","match","root","flexDirection","alignItems","margin","BasicButtonGroup","ButtonGroup","aria-label","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,kC,mNCyB5BC,I,oJClBA,SAASC,IACtB,OACE,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,oBAGA,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,YACHC,KAAK,YACLC,MAAM,aACNC,WAAS,EACTC,aAAa,gBAGjB,kBAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,WACHC,KAAK,WACLC,MAAM,YACNC,WAAS,EACTC,aAAa,iBAGjB,kBAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACE,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,WACHC,KAAK,WACLC,MAAM,iBACNC,WAAS,EACTC,aAAa,4BAGjB,kBAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACE,EAAA,EAAD,CACEE,GAAG,WACHC,KAAK,WACLC,MAAM,iBACNC,WAAS,EACTC,aAAa,4BAGjB,kBAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,OACHC,KAAK,OACLC,MAAM,OACNC,WAAS,EACTC,aAAa,6BAGjB,kBAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CAAWE,GAAG,QAAQC,KAAK,QAAQC,MAAM,wBAAwBC,WAAS,KAE5E,kBAACX,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,MACHC,KAAK,MACLC,MAAM,oBACNC,WAAS,EACTC,aAAa,0BAGjB,kBAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,UACHC,KAAK,UACLC,MAAM,UACNC,WAAS,EACTC,aAAa,sBAGjB,kBAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACS,EAAA,EAAD,CACEC,QAAS,kBAACC,EAAA,EAAD,CAAUC,MAAM,YAAYP,KAAK,cAAcQ,MAAM,QAC9DP,MAAM,4CClFH,SAASQ,IACtB,OACE,kBAAC,IAAMtB,SAAP,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,kBAGA,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIe,GAAI,GACrB,kBAACb,EAAA,EAAD,CAAWC,UAAQ,EAACC,GAAG,WAAWE,MAAM,eAAeC,WAAS,EAACC,aAAa,aAEhF,kBAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIe,GAAI,GACrB,kBAACb,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,aACHE,MAAM,cACNC,WAAS,EACTC,aAAa,eAGjB,kBAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIe,GAAI,GACrB,kBAACb,EAAA,EAAD,CAAWC,UAAQ,EAACC,GAAG,UAAUE,MAAM,cAAcC,WAAS,EAACC,aAAa,YAE9E,kBAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIe,GAAI,GACrB,kBAACb,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,MACHE,MAAM,MACNU,WAAW,uCACXT,WAAS,EACTC,aAAa,YAGjB,kBAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACS,EAAA,EAAD,CACEC,QAAS,kBAACC,EAAA,EAAD,CAAUC,MAAM,YAAYP,KAAK,WAAWQ,MAAM,QAC3DP,MAAM,kD,+BClCZW,EAAW,CACf,CAAEZ,KAAM,YAAaa,KAAM,eAAgBC,MAAO,SAClD,CAAEd,KAAM,YAAaa,KAAM,gBAAiBC,MAAO,SACnD,CAAEd,KAAM,YAAaa,KAAM,iBAAkBC,MAAO,SACpD,CAAEd,KAAM,YAAaa,KAAM,oBAAqBC,MAAO,UACvD,CAAEd,KAAM,WAAYa,KAAM,GAAIC,MAAO,SAEjCC,EAAY,CAAC,sBAAuB,aAAc,UAAW,QAAS,OACtEC,EAAW,CACf,CAAEhB,KAAM,YAAaiB,OAAQ,QAC7B,CAAEjB,KAAM,cAAeiB,OAAQ,iBAC/B,CAAEjB,KAAM,cAAeiB,OAAQ,uBAC/B,CAAEjB,KAAM,cAAeiB,OAAQ,YAG3BC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,SAAU,CACRC,QAASF,EAAM3B,QAAQ,EAAG,IAE5B8B,MAAO,CACLC,WAAY,KAEdC,MAAO,CACLC,UAAWN,EAAM3B,QAAQ,QAId,SAASkC,IACtB,IAAMC,EAAUV,IAEhB,OACE,kBAAC,IAAM/B,SAAP,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,iBAGA,kBAACuC,EAAA,EAAD,CAAMC,gBAAc,GACjBlB,EAASmB,KAAI,SAACC,GAAD,OACZ,kBAACC,EAAA,EAAD,CAAUC,UAAWN,EAAQP,SAAUc,IAAKH,EAAQhC,MAClD,kBAACoC,EAAA,EAAD,CAAcC,QAASL,EAAQhC,KAAMsC,UAAWN,EAAQnB,OACxD,kBAACzB,EAAA,EAAD,CAAYC,QAAQ,SAAS2C,EAAQlB,WAGzC,kBAACmB,EAAA,EAAD,CAAUC,UAAWN,EAAQP,UAC3B,kBAACe,EAAA,EAAD,CAAcC,QAAQ,UACtB,kBAACjD,EAAA,EAAD,CAAYC,QAAQ,YAAY6C,UAAWN,EAAQL,OAAnD,YAKJ,kBAAChC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACR,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAAC4C,UAAWN,EAAQH,OAAzD,YAGA,kBAACrC,EAAA,EAAD,CAAYE,cAAY,GAAxB,cACA,kBAACF,EAAA,EAAD,CAAYE,cAAY,GAAEyB,EAAUwB,KAAK,QAE3C,kBAAChD,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACgD,UAAU,SAAS7C,GAAI,GAAIC,GAAI,GAClD,kBAACR,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAAC4C,UAAWN,EAAQH,OAAzD,mBAGA,kBAAClC,EAAA,EAAD,CAAMC,WAAS,GACZwB,EAASe,KAAI,SAACU,GAAD,OACZ,kBAAC,IAAMtD,SAAP,CAAgBgD,IAAKM,EAAQzC,MAC3B,kBAACT,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,kBAACP,EAAA,EAAD,CAAYE,cAAY,GAAEmD,EAAQzC,OAEpC,kBAACT,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,kBAACP,EAAA,EAAD,CAAYE,cAAY,GAAEmD,EAAQxB,iBC5DpD,SAASyB,IACP,OACE,kBAACtD,EAAA,EAAD,CAAYC,QAAQ,QAAQkB,MAAM,gBAAgBoC,MAAM,UACrD,kBACD,kBAACC,EAAA,EAAD,CAAMrC,MAAM,UAAUsC,KAAK,4BAA3B,gBAEQ,KACP,IAAIC,MAAOC,cACX,KAKP,IAAM7B,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC4B,OAAQ,CACNC,SAAU,YAEZC,OAAO,aACLC,MAAO,OACPC,WAAYhC,EAAM3B,QAAQ,GAC1B4D,YAAajC,EAAM3B,QAAQ,IAC1B2B,EAAMkC,YAAYC,GAAG,IAAyB,EAAnBnC,EAAM3B,QAAQ,IAAU,CAClD0D,MAAO,IACPC,WAAY,OACZC,YAAa,SAGjBG,MAAM,aACJ9B,UAAWN,EAAM3B,QAAQ,GACzBgE,aAAcrC,EAAM3B,QAAQ,GAC5B6B,QAASF,EAAM3B,QAAQ,IACtB2B,EAAMkC,YAAYC,GAAG,IAAyB,EAAnBnC,EAAM3B,QAAQ,IAAU,CAClDiC,UAAWN,EAAM3B,QAAQ,GACzBgE,aAAcrC,EAAM3B,QAAQ,GAC5B6B,QAASF,EAAM3B,QAAQ,KAG3BiE,QAAS,CACPpC,QAASF,EAAM3B,QAAQ,EAAG,EAAG,IAE/BkE,QAAS,CACPC,QAAS,OACTC,eAAgB,YAElBC,OAAQ,CACNpC,UAAWN,EAAM3B,QAAQ,GACzB2D,WAAYhC,EAAM3B,QAAQ,QAIxBsE,EAAQ,CAAC,mBAAoB,kBAAmB,qBAevC,SAASC,IACtB,IAAMpC,EAAUV,IADiB,EAEG+C,IAAMC,SAAS,GAFlB,mBAE1BC,EAF0B,KAEdC,EAFc,KAYjC,OACE,kBAAC,IAAMjF,SAAP,KACE,kBAACkF,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQrB,SAAS,WAAW1C,MAAM,UAAU2B,UAAWN,EAAQoB,QAC7D,kBAACuB,EAAA,EAAD,KACE,kBAACnF,EAAA,EAAD,CAAYC,QAAQ,KAAKkB,MAAM,UAAUiE,QAAM,GAA/C,kBAKJ,0BAAMtC,UAAWN,EAAQsB,QACvB,kBAACuB,EAAA,EAAD,CAAOvC,UAAWN,EAAQ4B,OACxB,kBAACpE,EAAA,EAAD,CAAYsF,UAAU,KAAKrF,QAAQ,KAAKsD,MAAM,UAA9C,YAGA,kBAACgC,EAAA,EAAD,CAASR,WAAYA,EAAYjC,UAAWN,EAAQ8B,SACjDK,EAAMhC,KAAI,SAAC9B,GAAD,OACT,kBAAC2E,EAAA,EAAD,CAAMzC,IAAKlC,GACT,kBAAC4E,EAAA,EAAD,KAAY5E,QAIlB,kBAAC,IAAMd,SAAP,KACGgF,IAAeJ,EAAMe,OACpB,kBAAC,IAAM3F,SAAP,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,6BAGA,kBAACF,EAAA,EAAD,CAAYC,QAAQ,aAApB,qIAMF,kBAAC,IAAMF,SAAP,KA3Dd,SAAwB4F,GACtB,OAAQA,GACN,KAAK,EACH,OAAO,kBAAC7F,EAAD,MACT,KAAK,EACH,OAAO,kBAACuB,EAAD,MACT,KAAK,EACH,OAAO,kBAACkB,EAAD,MACT,QACE,MAAM,IAAIqD,MAAM,iBAmDLC,CAAed,GAChB,yBAAKjC,UAAWN,EAAQ+B,SACN,IAAfQ,GACC,kBAACe,EAAA,EAAD,CAAQC,QA1CP,WACjBf,EAAcD,EAAa,IAyCkBjC,UAAWN,EAAQkC,QAAhD,QAIF,kBAACoB,EAAA,EAAD,CACE7F,QAAQ,YACRkB,MAAM,UACN4E,QArDC,WACjBf,EAAcD,EAAa,IAqDXjC,UAAWN,EAAQkC,QAElBK,IAAeJ,EAAMe,OAAS,EAAI,cAAgB,YAO/D,kBAACpC,EAAD,QCxIY0C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,aCPAtE,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCqE,KAAM,CACJ7B,QAAS,OACT8B,cAAe,SACfC,WAAY,SACZ,QAAS,CACPC,OAAQxE,EAAM3B,QAAQ,SAKb,SAASoG,IACtB,IAAMjE,EAAUV,IAEhB,OACE,yBAAKgB,UAAWN,EAAQ6D,MACtB,kBAACK,EAAA,EAAD,CAAavF,MAAM,UAAUwF,aAAW,iCACtC,kBAACb,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,eAEF,kBAACY,EAAA,EAAD,CAAazG,QAAQ,YAAYkB,MAAM,UAAUwF,aAAW,kCAC1D,kBAACb,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,eAEF,kBAACY,EAAA,EAAD,CAAazG,QAAQ,OAAOkB,MAAM,UAAUwF,aAAW,6BACrD,kBAACb,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,gBAMRc,IAASC,OACP,kBAACjC,EAAD,MACAkC,SAASC,eAAe,SDmFpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.19b7bfb9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nexport default function AddressForm() {\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Shipping address\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"firstName\"\r\n            name=\"firstName\"\r\n            label=\"First name\"\r\n            fullWidth\r\n            autoComplete=\"given-name\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"lastName\"\r\n            name=\"lastName\"\r\n            label=\"Last name\"\r\n            fullWidth\r\n            autoComplete=\"family-name\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            id=\"address1\"\r\n            name=\"address1\"\r\n            label=\"Address line 1\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-line1\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            id=\"address2\"\r\n            name=\"address2\"\r\n            label=\"Address line 2\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-line2\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"city\"\r\n            name=\"city\"\r\n            label=\"City\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-level2\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"zip\"\r\n            name=\"zip\"\r\n            label=\"Zip / Postal code\"\r\n            fullWidth\r\n            autoComplete=\"shipping postal-code\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"country\"\r\n            name=\"country\"\r\n            label=\"Country\"\r\n            fullWidth\r\n            autoComplete=\"shipping country\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\r\n            label=\"Use this address for payment details\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nexport default function PaymentForm() {\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Payment method\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField required id=\"cardName\" label=\"Name on card\" fullWidth autoComplete=\"cc-name\" />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            required\r\n            id=\"cardNumber\"\r\n            label=\"Card number\"\r\n            fullWidth\r\n            autoComplete=\"cc-number\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField required id=\"expDate\" label=\"Expiry date\" fullWidth autoComplete=\"cc-exp\" />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            required\r\n            id=\"cvv\"\r\n            label=\"CVV\"\r\n            helperText=\"Last three digits on signature strip\"\r\n            fullWidth\r\n            autoComplete=\"cc-csc\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={<Checkbox color=\"secondary\" name=\"saveCard\" value=\"yes\" />}\r\n            label=\"Remember credit card details for next time\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst products = [\r\n  { name: 'Product 1', desc: 'A nice thing', price: '$9.99' },\r\n  { name: 'Product 2', desc: 'Another thing', price: '$3.45' },\r\n  { name: 'Product 3', desc: 'Something else', price: '$6.51' },\r\n  { name: 'Product 4', desc: 'Best thing of all', price: '$14.11' },\r\n  { name: 'Shipping', desc: '', price: 'Free' },\r\n];\r\nconst addresses = ['1 Material-UI Drive', 'Reactville', 'Anytown', '99999', 'USA'];\r\nconst payments = [\r\n  { name: 'Card type', detail: 'Visa' },\r\n  { name: 'Card holder', detail: 'Mr John Smith' },\r\n  { name: 'Card number', detail: 'xxxx-xxxx-xxxx-1234' },\r\n  { name: 'Expiry date', detail: '04/2024' },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItem: {\r\n    padding: theme.spacing(1, 0),\r\n  },\r\n  total: {\r\n    fontWeight: 700,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Review() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      <List disablePadding>\r\n        {products.map((product) => (\r\n          <ListItem className={classes.listItem} key={product.name}>\r\n            <ListItemText primary={product.name} secondary={product.desc} />\r\n            <Typography variant=\"body2\">{product.price}</Typography>\r\n          </ListItem>\r\n        ))}\r\n        <ListItem className={classes.listItem}>\r\n          <ListItemText primary=\"Total\" />\r\n          <Typography variant=\"subtitle1\" className={classes.total}>\r\n            $34.06\r\n          </Typography>\r\n        </ListItem>\r\n      </List>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n            Shipping\r\n          </Typography>\r\n          <Typography gutterBottom>John Smith</Typography>\r\n          <Typography gutterBottom>{addresses.join(', ')}</Typography>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n            Payment details\r\n          </Typography>\r\n          <Grid container>\r\n            {payments.map((payment) => (\r\n              <React.Fragment key={payment.name}>\r\n                <Grid item xs={6}>\r\n                  <Typography gutterBottom>{payment.name}</Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Typography gutterBottom>{payment.detail}</Typography>\r\n                </Grid>\r\n              </React.Fragment>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddressForm from './AddressForm';\r\nimport PaymentForm from './PaymentForm';\r\nimport Review from './Review';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst steps = ['Shipping address', 'Payment details', 'Review your order'];\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return <AddressForm />;\r\n    case 1:\r\n      return <PaymentForm />;\r\n    case 2:\r\n      return <Review />;\r\n    default:\r\n      throw new Error('Unknown step');\r\n  }\r\n}\r\n\r\nexport default function Checkout() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n            Company name\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            Checkout\r\n          </Typography>\r\n          <Stepper activeStep={activeStep} className={classes.stepper}>\r\n            {steps.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          <React.Fragment>\r\n            {activeStep === steps.length ? (\r\n              <React.Fragment>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  Thank you for your order.\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  Your order number is #2001539. We have emailed your order confirmation, and will\r\n                  send you an update when your order has shipped.\r\n                </Typography>\r\n              </React.Fragment>\r\n            ) : (\r\n              <React.Fragment>\r\n                {getStepContent(activeStep)}\r\n                <div className={classes.buttons}>\r\n                  {activeStep !== 0 && (\r\n                    <Button onClick={handleBack} className={classes.button}>\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleNext}\r\n                    className={classes.button}\r\n                  >\r\n                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                  </Button>\r\n                </div>\r\n              </React.Fragment>\r\n            )}\r\n          </React.Fragment>\r\n        </Paper>\r\n        <Copyright />\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Checkout from './Checkout';\nimport * as serviceWorker from './serviceWorker';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function BasicButtonGroup() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n        <Button>One</Button>\n        <Button>Two</Button>\n        <Button>Three</Button>\n      </ButtonGroup>\n      <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\n        <Button>One</Button>\n        <Button>Two</Button>\n        <Button>Three</Button>\n      </ButtonGroup>\n      <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\n        <Button>One</Button>\n        <Button>Two</Button>\n        <Button>Three</Button>\n      </ButtonGroup>\n    </div>\n  );\n}\n\nReactDOM.render(\n  <Checkout />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}